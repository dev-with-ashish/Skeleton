{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-timeline-container-{{ ai_gen_id }} {
    max-width: 800px;
    margin: 0 auto;
    padding: {{ block.settings.section_padding }}px 20px;
    background-color: {{ block.settings.background_color }};}

  .ai-timeline-{{ ai_gen_id }} {
    position: relative;
    padding-left: 60px;
  }

  .ai-timeline-line-{{ ai_gen_id }} {
    position: absolute;
    left: 20px;
    top: 0;
    bottom: 0;
    width: 4px;
    background-color: {{ block.settings.line_inactive_color }};
    border-radius: 2px;
  }

  .ai-timeline-progress-{{ ai_gen_id }} {
    position: absolute;
    left: 20px;
    top: 0;
    width: 4px;
    background-color: {{ block.settings.line_active_color }};
    border-radius: 2px;height: 0%;
    transition: height 0.3s ease;
  }

  .ai-timeline-item-{{ ai_gen_id }} {
    position: relative;
    margin-bottom: {{ block.settings.item_spacing }}px;
    opacity: 0.5;
    transition: opacity 0.3s ease;
  }

  .ai-timeline-item-{{ ai_gen_id }}.active {
    opacity: 1;
  }

  .ai-timeline-dot-{{ ai_gen_id }} {
    position: absolute;
    left: -52px;
    top: 8px;
    width: {{ block.settings.dot_size }}px;
    height: {{ block.settings.dot_size }}px;
    background-color: {{ block.settings.dot_inactive_color }};
    border: 3px solid {{ block.settings.background_color }};
    border-radius: 50%;
    transition: all 0.3s ease;z-index: 2;
  }

  .ai-timeline-item-{{ ai_gen_id }}.active .ai-timeline-dot-{{ ai_gen_id }} {
    background-color: {{ block.settings.dot_active_color }};
    transform: scale(1.2);
    box-shadow: 0 0 0 4px {{ block.settings.dot_active_color }}33;
  }

  .ai-timeline-content-{{ ai_gen_id }} {
    background-color: {{ block.settings.card_background_color }};
    padding: {{ block.settings.card_padding }}px;
    border-radius: {{ block.settings.card_border_radius }}px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .ai-timeline-item-{{ ai_gen_id }}.active .ai-timeline-content-{{ ai_gen_id }} {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
  }

  .ai-timeline-date-{{ ai_gen_id }} {
    color: {{ block.settings.date_color }};
    font-size: {{ block.settings.date_font_size }}px;
    font-weight: 600;
    margin-bottom: 8px;
  }

  .ai-timeline-title-{{ ai_gen_id }} {
    color: {{ block.settings.title_color }};
    font-size: {{ block.settings.title_font_size }}px;
    font-weight: 700;
    margin: 0 0 12px 0;
    line-height: 1.3;
  }

  .ai-timeline-description-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.text_font_size }}px;
    line-height: 1.5;
    margin: 0;
  }

  @media screen and (max-width: 749px) {
    .ai-timeline-{{ ai_gen_id }} {
      padding-left: 40px;
    }

    .ai-timeline-dot-{{ ai_gen_id }} {
      left: -32px;
      width: {{ block.settings.dot_size | times: 0.8 }}px;
      height: {{ block.settings.dot_size | times: 0.8 }}px;
    }

    .ai-timeline-content-{{ ai_gen_id }} {
      padding: {{ block.settings.card_padding | times: 0.8 }}px;
    }

    .ai-timeline-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_font_size | times: 0.9 }}px;
    }
  }
{% endstyle %}

<scroll-timeline-{{ ai_gen_id }}
  class="ai-timeline-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-timeline-{{ ai_gen_id }}">
    <div class="ai-timeline-line-{{ ai_gen_id }}"></div>
    <div class="ai-timeline-progress-{{ ai_gen_id }}"></div>

    {% for i in (1..6) %}
      {% liquid
        assign date_key = 'item_' | append: i | append: '_date'
        assign title_key = 'item_' | append: i | append: '_title'
        assign description_key = 'item_' | append: i | append: '_description'
        assign item_date = block.settings[date_key]
        assign item_title = block.settings[title_key]
        assign item_description = block.settings[description_key]%}

      {% if item_title != blank %}
        <div class="ai-timeline-item-{{ ai_gen_id }}" data-timeline-item="{{ i }}">
          <div class="ai-timeline-dot-{{ ai_gen_id }}"></div>
          <div class="ai-timeline-content-{{ ai_gen_id }}">
            {% if item_date != blank %}
              <div class="ai-timeline-date-{{ ai_gen_id }}">{{ item_date }}</div>
            {% endif %}<h3 class="ai-timeline-title-{{ ai_gen_id }}">{{ item_title }}</h3>
            {% if item_description != blank %}
              <div class="ai-timeline-description-{{ ai_gen_id }}">{{ item_description }}</div>
            {% endif %}
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</scroll-timeline-{{ ai_gen_id }}>

<script>
  (function() {
    class ScrollTimeline{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.timelineItems = [];
        this.progressBar = null;
        this.isObserving = false;}

      connectedCallback() {
        this.timelineItems = Array.from(this.querySelectorAll('.ai-timeline-item-{{ ai_gen_id }}'));
        this.progressBar = this.querySelector('.ai-timeline-progress-{{ ai_gen_id }}');
        
        if (this.timelineItems.length > 0) {
          this.setupIntersectionObserver();this.setupScrollListener();
        }
      }

      disconnectedCallback() {
        if (this.observer) {
          this.observer.disconnect();
        }
        if (this.scrollListener) {
          window.removeEventListener('scroll', this.scrollListener);
        }
      }

      setupIntersectionObserver() {
        const options = {
          root: null,
          rootMargin: '-20% 0px -20% 0px',
          threshold: 0.5
        };

        this.observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            const item = entry.target;
            if (entry.isIntersecting) {
              item.classList.add('active');
            } else {
              item.classList.remove('active');
            }
          });this.updateProgressBar();
        }, options);

        this.timelineItems.forEach(item => {
          this.observer.observe(item);
        });
      }

      setupScrollListener() {
        this.scrollListener = () => {
          this.updateProgressBar();
        };
        window.addEventListener('scroll', this.scrollListener, { passive: true });
      }

      updateProgressBar() {
        if (!this.progressBar || this.timelineItems.length === 0) return;

        const containerRect = this.getBoundingClientRect();
        const containerTop = containerRect.top + window.pageYOffset;
        const containerHeight = containerRect.height;
        
        const viewportHeight = window.innerHeight;
        const scrollTop = window.pageYOffset;
        const viewportCenter = scrollTop + viewportHeight / 2;

        let progress = 0;

        if (viewportCenter >= containerTop) {
          const scrollProgress = (viewportCenter - containerTop) / containerHeight;
          progress = Math.min(Math.max(scrollProgress * 100, 0), 100);
        }

        this.progressBar.style.height = progress + '%';
      }
    }

    customElements.define('scroll-timeline-{{ ai_gen_id }}', ScrollTimeline{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Interactive Timeline",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Timeline Items"
    },
    {
      "type": "text",
      "id": "item_1_date",
      "label": "Item 1 - Date",
      "default": "2020"
    },
    {
      "type": "text",
      "id": "item_1_title",
      "label": "Item 1 - Title",
      "default": "Company Founded"
    },
    {
      "type": "textarea",
      "id": "item_1_description",
      "label": "Item 1 - Description",
      "default": "Our journey began with a simple idea to make a difference."
    },
    {
      "type": "text",
      "id": "item_2_date",
      "label": "Item 2 - Date",
      "default": "2021"
    },
    {
      "type": "text",
      "id": "item_2_title",
      "label": "Item 2 - Title",
      "default": "First Product Launch"
    },
    {
      "type": "textarea",
      "id": "item_2_description",
      "label": "Item 2 - Description",
      "default": "We launched our flagship product to great success."
    },
    {
      "type": "text",
      "id": "item_3_date",
      "label": "Item 3 - Date",
      "default": "2022"
    },
    {
      "type": "text",
      "id": "item_3_title",
      "label": "Item 3 - Title",
      "default": "Global Expansion"
    },
    {
      "type": "textarea",
      "id": "item_3_description",
      "label": "Item 3 - Description",
      "default": "Expanded operations to serve customers worldwide."
    },
    {
      "type": "text",
      "id": "item_4_date",
      "label": "Item 4 - Date"
    },
    {
      "type": "text",
      "id": "item_4_title",
      "label": "Item 4 - Title"
    },
    {
      "type": "textarea",
      "id": "item_4_description",
      "label": "Item 4 - Description"
    },
    {
      "type": "text",
      "id": "item_5_date",
      "label": "Item 5 - Date"
    },
    {
      "type": "text",
      "id": "item_5_title",
      "label": "Item 5 - Title"
    },
    {
      "type": "textarea",
      "id": "item_5_description",
      "label": "Item 5 - Description"
    },
    {
      "type": "text",
      "id": "item_6_date",
      "label": "Item 6 - Date"
    },
    {
      "type": "text",
      "id": "item_6_title",
      "label": "Item 6 - Title"
    },
    {
      "type": "textarea",
      "id": "item_6_description",
      "label": "Item 6 - Description"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 20,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Section padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 20,
      "max": 80,
      "step": 10,
      "unit": "px",
      "label": "Item spacing",
      "default": 40
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 15,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "Card padding",
      "default": 25
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Timeline Line"
    },
    {
      "type": "color",
      "id": "line_inactive_color",
      "label": "Line inactive color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "line_active_color",
      "label": "Line active color",
      "default": "#007acc"
    },
    {
      "type": "header",
      "content": "Timeline Dots"
    },
    {
      "type": "range",
      "id": "dot_size",
      "min": 12,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Dot size",
      "default": 16
    },
    {
      "type": "color",
      "id": "dot_inactive_color",
      "label": "Dot inactive color",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Dot active color",
      "default": "#007acc"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Card background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "date_color",
      "label": "Date color",
      "default": "#007acc"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "date_font_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Date font size",
      "default": 14
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 18,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title font size",
      "default": 24
    },
    {
      "type": "range",
      "id": "text_font_size",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Text font size",
      "default": 16
    }
  ],
  "presets": [
    {
      "name": "Interactive Timeline"
    }
  ]
}
{% endschema %}