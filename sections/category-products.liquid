{% schema %}
{
  "name": "Category Products",
  "settings": [
    { "type": "text", "id": "heading", "label": "Section Heading", "default": "SPF PROTECTION" },
    { "type": "textarea", "id": "description", "label": "Section Description", "default": "Slunce = vrásky. SPF je anti-aging zbraň č. 1, ať je léto nebo leden. Každý den, bro." },
    { "type": "collection", "id": "collection", "label": "Collection" },
    { "type": "number", "id": "limit", "label": "Products to show", "default": 3 }
  ],
  "presets": [
    { "name": "Category Products" }
  ]
}
{% endschema %}

<section class="py-20">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h3 class="text-6xl font-black heading-font text-white mb-6 brutal-text">{{ section.settings.heading }}</h3>
      <p class="text-2xl text-gray-300 max-w-4xl mx-auto leading-relaxed font-bold">{{ section.settings.description }}</p>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-10">
      {% for product in collections[section.settings.collection].products limit: section.settings.limit %}
        {% render 'product-card', product: product %}
      {% endfor %}
    </div>
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.product-card').forEach(function(card) {
    const mainImgs = card.querySelectorAll('.product-main-img');
    const thumbs = card.querySelectorAll('.product-thumb-img');
    if (thumbs.length > 0) {
      thumbs.forEach(function(thumb, idx) {
        thumb.addEventListener('click', function() {
          mainImgs.forEach((img, i) => {
            img.style.opacity = (i === idx) ? '1' : '0';
          });
          thumbs.forEach((t, i) => {
            t.classList.toggle('border-purple-500', i === idx);
          });
        });
      });
      // Set first thumb as active
      thumbs[0].classList.add('border-purple-500');
    }
    // Quantity controls
    const minus = card.querySelector('.qty-minus');
    const plus = card.querySelector('.qty-plus');
    const qtyInput = card.querySelector('[data-qty-input]');
    const hiddenQtyInput = card.querySelector('.hidden-qty-input');
    if (minus && plus && qtyInput && hiddenQtyInput) {
      minus.addEventListener('click', function() {
        let val = parseInt(qtyInput.value) || 1;
        if (val > 1) val--;
        qtyInput.value = val;
        hiddenQtyInput.value = val;
      });
      plus.addEventListener('click', function() {
        let val = parseInt(qtyInput.value) || 1;
        val++;
        qtyInput.value = val;
        hiddenQtyInput.value = val;
      });
      qtyInput.addEventListener('input', function() {
        let val = parseInt(qtyInput.value) || 1;
        if (val < 1) val = 1;
        qtyInput.value = val;
        hiddenQtyInput.value = val;
      });
    }
    // On form submit, ensure hidden input is up to date
    const form = card.querySelector('.add-to-cart-form');
    if (form && qtyInput && hiddenQtyInput) {
      form.addEventListener('submit', function() {
        hiddenQtyInput.value = qtyInput.value;
      });
    }
  });
});
</script>

<style>
input[type="number"].qty-input::-webkit-inner-spin-button,
input[type="number"].qty-input::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"].qty-input {
  -moz-appearance: textfield;
}
</style> 