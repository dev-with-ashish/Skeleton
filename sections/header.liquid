<header>
  <div class="outer header-wrapper">
    <!-- 1st inner (40%): two‑word title, stacked & centered -->
    <div class="inner inner--first">
      {% assign words = shop.name | split: ' ' %}
      <a href="{{ routes.root_url }}" class="header__title-link">
        <span>{{ words[0] }}</span>
        <span>{{ words[1] }}</span>
      </a>
    </div>

    <!-- 2nd inner (40%): desktop only -->
    <div class="inner inner--second desktop-show">
      {% assign menu_links = section.settings.menu.links %}
      {% assign half = menu_links.size | divided_by: 2 %}
      <div class="menu-half">
        {% for link in menu_links limit: half %}
          <a href="{{ link.url }}">{{ link.title }}</a>
        {% endfor %}
      </div>
      <div class="menu-half">
        {% for link in menu_links offset: half %}
          <a href="{{ link.url }}">{{ link.title }}</a>
        {% endfor %}
      </div>
    </div>

    <!-- 3rd inner (20%): desktop only -->
    <div class="inner inner--third desktop-show">
      {% if shop.customer_accounts_enabled %}
        <a href="{{ routes.account_url }}" class="header__icon">Account</a>
      {% endif %}
      <a href="{{ routes.cart_url }}" class="header__icon">
        Cart
        {% if cart.item_count > 0 %}
          <sup>{{ cart.item_count }}</sup>
        {% endif %}
      </a>
      <form action="{{ routes.search_url }}" method="get" class="header__icon header__search-box">
        <input type="search" name="q" placeholder="Search…" aria-label="Search" />
      </form>
    </div>

    <!-- Hamburger toggle: mobile only -->
    <button id="mobile-nav-toggle" class="mobile-only" aria-label="Open menu" aria-expanded="false">
      ☰
    </button>

    <!-- Off‑canvas mobile nav: mobile only -->
    <div class="mobile-nav mobile-only" id="mobile-nav">
      <div class="mobile-nav__content">
        <button class="mobile-nav__close-btn" aria-label="Close menu" type="button">&times;</button>
        {% assign menu_links = section.settings.menu.links %}
        {% assign half = menu_links.size | divided_by: 2 %}
        <div class="menu-half">
          {% for link in menu_links limit: half %}
            <a href="{{ link.url }}">{{ link.title }}</a>
          {% endfor %}
        </div>
        <div class="menu-half">
          {% for link in menu_links offset: half %}
            <a href="{{ link.url }}">{{ link.title }}</a>
          {% endfor %}
        </div>

        {% if shop.customer_accounts_enabled %}
          <a href="{{ routes.account_url }}" class="header__icon">Account</a>
        {% endif %}
        <a href="{{ routes.cart_url }}" class="header__icon">
          Cart
          {% if cart.item_count > 0 %}
            <sup>{{ cart.item_count }}</sup>
          {% endif %}
        </a>
        <form action="{{ routes.search_url }}" method="get" class="header__icon header__search-box">
          <input type="search" name="q" placeholder="Search…" aria-label="Search" />
        </form>
      </div>
    </div>
  </div>
</header>

{% stylesheet %}
  .header-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  min-height: 7rem;
  width: 100%;
  padding: 0 1rem;
}
  
  .inner {
    display: flex;
    justify-content: left;
    align-items: left;
  }
  .inner--first  { flex: 0 0 40%; }
  .inner--second { flex: 0 0 40%; }
  .inner--third  {
    flex: 0 0 20%;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
    gap: 0.5rem;
  }

  .header__title-link {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    align-items: left;
    font-size: 2.8rem;
    font-weight: bold;
    line-height: 1.1;
    color: var(--color-foreground);
  }
  .header__title-link span {
    display: block;
    width: 100%;
  }

  .menu-half {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: left;
    gap: 0.5rem;
  }
  .menu-half a {
    text-decoration: none;
    color: var(--color-foreground);
    font-size: 1rem;
  }

  .header__icon {
    display: flex;
    align-items: flex-end;
    text-decoration: none;
    font-weight: 600;
    background-color: #000;
    color: #fff;
    padding: 1.5px 5px;
    border-radius: 3px;
    box-sizing: border-box;
    max-width: 50%;
  }
  .header__icon sup {
    margin-left: 0.3em;
    font-size: 0.8em;
    background: #fff;
    color: #000;
    border-radius: 50%;
    padding: 0 0.3em;
  }

  .header__search-box input[type="search"] {
    border: none;
    background: transparent;
    text-align: left;
    font: inherit;
  }

  /* Visibility helpers */
  .desktop-show { display: flex; }
  .mobile-only { display: none; }

  /* Mobile styles */
  @media screen and (max-width: 768px) {
    .desktop-show { display: none !important; }
    .mobile-only  { display: block !important; }


    #mobile-nav-toggle {
      font-size: 6rem;
      background: none;
      border: none;
      cursor: pointer;
      padding: 0.5rem;
      color: var(--color-foreground);
    }

    .mobile-nav {
      position: fixed;
      top: 0; /* or top: 4.5rem; if you want it below the header */
      left: 0;
      right: 0;
      width: 100vw;
      height: 100vh; /* or calc(100vh - header height) if header is fixed */
      z-index: 99999;
      background: var(--color-background, #fff);
      box-shadow: -2px 0 5px rgba(0, 0, 0, 0.3);
      transition: right 0.3s ease-out;
    }

    .mobile-nav.open {
      right: 0;
    }

    .mobile-nav__content {
      display: flex;
      flex-direction: column;
      padding: 0 1rem 2.5rem 1rem;
      gap: 0;
      width: 100%;
      height: 100%;
      align-items: center;
      justify-content: center;
    }

    .mobile-nav__content > * {
      width: 90%;
      max-width: 350px;
      margin: 0 auto 0.5rem auto;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .mobile-nav__content .menu-half,
    .mobile-nav__content .header__icon,
    .mobile-nav__content .header__search-box {
      width: 100%;
      box-sizing: border-box;
    }
    .mobile-nav__content .menu-half {
      display: flex;
      flex-direction: column;
      gap: 0;
      align-items: center;
      margin-bottom: 0;
    }
    .mobile-nav__content .menu-half + .menu-half {
      margin-top: -2rem;
    }
    .mobile-nav__content a {
      text-decoration: none;
      color: var(--color-foreground);
      font-size: 1.1rem;
      padding: 0.7rem 0.5rem;
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      border-bottom: 1px solid #eee;
      background: none;
    }
    .mobile-nav__content .header__icon {
      background: #000;
      color: #fff;
      border-radius: 6px;
      margin-bottom: 0.25rem;
      padding: 0.7rem 0.5rem;
      font-size: 1.1rem;
      text-align: center;
      border: none;
      box-shadow: 0 1px 3px rgba(0,0,0,0.04);
      width: 100%;
      justify-content: center;
    }
    .mobile-nav__content .header__icon:last-child {
      margin-bottom: 0;
    }
    .mobile-nav__content .header__search-box {
      padding: 0.7rem 0.5rem;
      background: none;
      border-bottom: 1px solid #eee;
      width: 100%;
    }
    .mobile-nav__content .header__search-box input[type="search"] {
      width: 100%;
      padding: 0.5rem 0.5rem;
      font-size: 1rem;
      border-radius: 0.25rem;
      border: 1px solid #ccc;
      box-sizing: border-box;
    }
  }
{% endstylesheet %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const toggleBtn = document.getElementById('mobile-nav-toggle');
    const mobileNav = document.getElementById('mobile-nav');

    if (!toggleBtn || !mobileNav) return;

    toggleBtn.addEventListener('click', function () {
      const isOpen = mobileNav.classList.toggle('open');
      toggleBtn.setAttribute('aria-expanded', isOpen ? 'true' : 'false');
    });

    // Delegate close button event after DOM is ready
    mobileNav.addEventListener('click', function (e) {
      if (e.target.classList.contains('mobile-nav__close-btn')) {
        mobileNav.classList.remove('open');
        toggleBtn.setAttribute('aria-expanded', 'false');
      }
    });
  });
</script>

{% schema %}
{
  "name": "t:general.header",
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "label": "t:labels.menu"
    }
  ]
}
{% endschema %}
