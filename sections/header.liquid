<header>
  <div class="outer header-wrapper">
    <!-- 1st inner (40%): two‑word title, stacked & centered as one unit -->
    <div class="inner inner--first">
      {% assign words = shop.name | split: ' ' %}
      <a href="{{ routes.root_url }}" class="header__title-link">
        <span>{{ words[0] }}</span>
        <span>{{ words[1] }}</span>
      </a>
    </div>

    <!-- 2nd inner (40%): two equal halves of your main menu, each half centered -->
    <div class="inner inner--second">
      {% assign menu_links = section.settings.menu.links %}
      {% assign half = menu_links.size | divided_by: 2 %}
      <div class="menu-half">
        {% for link in menu_links limit: half %}
          <a href="{{ link.url }}">{{ link.title }}</a>
        {% endfor %}
      </div>
      <div class="menu-half">
        {% for link in menu_links offset: half %}
          <a href="{{ link.url }}">{{ link.title }}</a>
        {% endfor %}
      </div>
    </div>

    <!-- 3rd inner (20%): your three “icon” links, stacked & centered -->
    <div class="inner inner--third">
      {% if shop.customer_accounts_enabled %}
        <a href="{{ routes.account_url }}" class="header__icon">Account</a>
      {% endif %}
      <a href="{{ routes.cart_url }}" class="header__icon">
        Cart
        {% if cart.item_count > 0 %}
          <sup>{{ cart.item_count }}</sup>
        {% endif %}
      </a>
      <form action="{{ routes.search_url }}" method="get" class="header__icon header__search-box">
        <input type="search" name="q" placeholder="Search…" aria-label="Search" />
      </form>
    </div>
  </div>
  <!-- Hamburger icon for mobile -->
  <button class="header__hamburger" aria-label="Open menu" onclick="document.body.classList.add('mobile-menu-open')">
    <span></span><span></span><span></span>
  </button>
  <!-- Mobile slide-in menu -->
  <div class="header__mobile-menu" onclick="if(event.target===this){document.body.classList.remove('mobile-menu-open')}">
    <div class="header__mobile-menu-content">
      <button class="header__mobile-close" aria-label="Close menu" onclick="document.body.classList.remove('mobile-menu-open')">&times;</button>
      <!-- Title -->
      <div class="mobile-inner mobile-title">
        {% assign words = shop.name | split: ' ' %}
        <a href="{{ routes.root_url }}" class="header__title-link">
          <span>{{ words[0] }}</span>
          <span>{{ words[1] }}</span>
        </a>
      </div>
      <!-- Menu -->
      <div class="mobile-inner mobile-menu">
        {% assign menu_links = section.settings.menu.links %}
        {% for link in menu_links %}
          <a href="{{ link.url }}">{{ link.title }}</a>
        {% endfor %}
      </div>
      <!-- Icons -->
      <div class="mobile-inner mobile-icons">
        {% if shop.customer_accounts_enabled %}
          <a href="{{ routes.account_url }}" class="header__icon">Account</a>
        {% endif %}
        <a href="{{ routes.cart_url }}" class="header__icon">
          Cart
          {% if cart.item_count > 0 %}
            <sup>{{ cart.item_count }}</sup>
          {% endif %}
        </a>
        <form action="{{ routes.search_url }}" method="get" class="header__icon header__search-box">
          <input type="search" name="q" placeholder="Search…" aria-label="Search" />
        </form>
      </div>
    </div>
  </div>
</header>

{% stylesheet %}
  /* Outer flex, 40‑40‑20 widths, all groups baseline‑aligned */
  .header-wrapper {
    display: flex;
    align-items: center;           /* baseline for all three groups */
    justify-content: space-between;
    min-height: 7rem;
    width: 100%;
    padding: 0 1rem;
  }
  .inner {
    display: flex;
    justify-content: left;
    align-items: left;
  }
  .inner--first  { flex: 0 0 40%; }
  .inner--second { flex: 0 0 40%; }
  .inner--third  { flex: 0 0 20%; flex-direction: column; }

  /* 1st inner: two stacked words, centered */
  .header__title-link {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    align-items: left;
    font-size: 2.8rem; /* adjust as needed */
    font-weight: bold;
    line-height: 1.1;
    color: var(--color-foreground);
  }
  .header__title-link span {
    display: block;
    width: 100%;
  }

  /* 2nd inner: split into two halves, each half a vertical list of links centered */
  .inner--second {
    display: flex;
  }
  .menu-half {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;   /* group sits centered vertically */
    align-items: left;       /* group sits centered horizontally */
    gap: 0.5rem;
  }
  .menu-half a {
    text-decoration: none;
    color: var(--color-foreground);
    font-size: 1rem;
  }

  /* 3rd inner: icons stacked & centered as one group */
  .inner--third {
    flex: 0 0 20%;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;    /* ★ right‑align all its children */
    gap: 0.5rem;
  }
  .header__icon {
    display: flex;
    align-items: flex-end;
    text-decoration: none;
    font-weight: 600;
    color: var(--color-foreground);
    background-color: #000;   /* ★ black box */
    color: #fff;              /* ★ white text */
    padding: 1.5px 5px;
    border-radius: 3px;
    box-sizing: border-box;
    max-width: 50%;
  }
  .header__icon sup {
    margin-left: 0.3em;
    font-size: 0.8em;
    background: #fff;
    color: #000;
    border-radius: 50%;
    padding: 0 0.3em;
  }
  .header__search-box input[type="search"] {
    border: none;
    background: transparent;
    text-align: left;
    font: inherit;
  }

/* Hamburger icon styles */
.header__hamburger {
  display: none;
  position: absolute;
  top: 1rem;
  right: 1rem;
  width: 2.5rem;
  height: 2.5rem;
  background: none;
  border: none;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 1002;
  cursor: pointer;
}
.header__hamburger span {
  display: block;
  width: 2rem;
  height: 0.3rem;
  margin: 0.3rem 0;
  background: #000;
  border-radius: 2px;
}

/* Mobile menu overlay */
.header__mobile-menu {
  display: none;
  position: fixed;
  top: 0; right: 0; bottom: 0; left: 0;
  background: rgba(0,0,0,0.3);
  z-index: 1001;
  transition: opacity 0.3s;
}
.header__mobile-menu-content {
  position: absolute;
  top: 0; right: 0;
  width: 80vw;
  max-width: 350px;
  height: 100%;
  background: #fff;
  box-shadow: -2px 0 8px rgba(0,0,0,0.1);
  display: flex;
  flex-direction: column;
  padding: 2rem 1.5rem 1.5rem 1.5rem;
  transform: translateX(100%);
  transition: transform 0.3s;
}
.header__mobile-close {
  background: none;
  border: none;
  font-size: 2rem;
  position: absolute;
  top: 1rem;
  right: 1rem;
  cursor: pointer;
}
.mobile-inner {
  margin-bottom: 2rem;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.mobile-title .header__title-link {
  font-size: 2rem;
}
.mobile-menu a {
  font-size: 1.2rem;
  margin-bottom: 1rem;
  color: var(--color-foreground);
  text-decoration: none;
}
.mobile-icons .header__icon {
  margin-bottom: 1rem;
  width: 100%;
  justify-content: flex-start;
}
.mobile-icons .header__search-box {
  margin-bottom: 0;
}

/* Show hamburger and mobile menu on small screens */
@media (max-width: 768px) {
  .header-wrapper {
    display: none;
  }
  .header__hamburger {
    display: flex;
  }
  body.mobile-menu-open .header__mobile-menu {
    display: block;
    opacity: 1;
  }
  body.mobile-menu-open .header__mobile-menu-content {
    transform: translateX(0);
  }
}
{% endstylesheet %}

{% schema %}
{
  "name": "t:general.header",
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "label": "t:labels.menu"
    }
  ]
}
{% endschema %}
