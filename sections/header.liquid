<header>
  <div class="outer header-wrapper">
    <!-- 1st inner (40%): two‑word title, stacked & centered as one unit -->
    <div class="inner inner--first">
      {% assign words = shop.name | split: ' ' %}
      <a href="{{ routes.root_url }}" class="header__title-link">
        <span>{{ words[0] }}</span>
        <span>{{ words[1] }}</span>
      </a>
    </div>

    <!-- 2nd inner (40%): two equal halves of your main menu, each half centered -->
    <div class="inner inner--second">
      {% assign menu_links = section.settings.menu.links %}
      {% assign half = menu_links.size | divided_by: 2 %}
      <div class="menu-half">
        {% for link in menu_links limit: half %}
          <a href="{{ link.url }}">{{ link.title }}</a>
        {% endfor %}
      </div>
      <div class="menu-half">
        {% for link in menu_links offset: half %}
          <a href="{{ link.url }}">{{ link.title }}</a>
        {% endfor %}
      </div>
    </div>

    <!-- 3rd inner (20%): your three “icon” links, stacked & centered -->
    <div class="inner inner--third">
      {% if shop.customer_accounts_enabled %}
        <a href="{{ routes.account_url }}" class="header__icon">Account</a>
      {% endif %}
      <a href="{{ routes.cart_url }}" class="header__icon">
        Cart
        {% if cart.item_count > 0 %}
          <sup>{{ cart.item_count }}</sup>
        {% endif %}
      </a>
      <form action="{{ routes.search_url }}" method="get" class="header__icon header__search-box">
        <input type="search" name="q" placeholder="Search…" aria-label="Search" />
      </form>
    </div>
  </div>
</header>

{% stylesheet %}
  /* Outer flex, 40‑40‑20 widths, all groups baseline‑aligned */
  .header-wrapper {
    display: flex;
    align-items: center;           /* baseline for all three groups */
    justify-content: space-between;
    min-height: 7rem;
    width: 100%;
    padding: 0 1rem;
  }
  .inner {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .inner--first  { flex: 0 0 40%; }
  .inner--second { flex: 0 0 40%; }
  .inner--third  { flex: 0 0 20%; flex-direction: column; }

  /* 1st inner: two stacked words, centered */
  .header__title-link {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    align-items: left;
    font-size: 2.5rem; /* adjust as needed */
    font-weight: bold;
    line-height: 1.1;
    color: var(--color-foreground);
  }
  .header__title-link span {
    display: block;
    width: 100%;
  }

  /* 2nd inner: split into two halves, each half a vertical list of links centered */
  .inner--second {
    display: flex;
  }
  .menu-half {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;   /* group sits centered vertically */
    align-items: left;       /* group sits centered horizontally */
    gap: 0.5rem;
  }
  .menu-half a {
    text-decoration: none;
    color: var(--color-foreground);
    font-size: 1rem;
  }

  /* 3rd inner: icons stacked & centered as one group */
  .inner--third {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: right;
    gap: 0.5rem;
  }
  .header__icon {
    display: flex;
    align-items: center;
    text-decoration: none;
    font-weight: 600;
    color: var(--color-foreground);
  }
  .header__icon sup {
    margin-left: 0.3em;
    font-size: 0.8em;
    background: #fff;
    color: #000;
    border-radius: 50%;
    padding: 0 0.3em;
  }
  .header__search-box input[type="search"] {
    border: none;
    background: transparent;
    text-align: center;
    font: inherit;
  }
{% endstylesheet %}

{% schema %}
{
  "name": "t:general.header",
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "label": "t:labels.menu"
    }
  ]
}
{% endschema %}
