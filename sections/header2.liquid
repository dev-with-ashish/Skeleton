<header class="agh-header full-width">
  <div class="header-container full-width">
    <!-- Logo/Brand -->
    <div class="header-brand">
      <a href="{{ routes.root_url }}" class="brand-link">
        <img
          src="{{ 'AGH Logo GreenAsset 1@4x.png' | asset_url }}"
          alt="Andra's Garden Heaven Logo"
          class="brand-logo"
          width="120"
          height="40"
        >
      </a>
    </div>

    <!-- Desktop Navigation - HIDDEN ON MOBILE/TABLET -->
    <nav class="header-nav desktop-nav">
      {% for link in section.settings.menu.links %}
        <a href="{{ link.url }}" class="nav-link{% if link.active %} active{% endif %}">{{ link.title }}</a>
      {% endfor %}
    </nav>

    <!-- Desktop Search Bar - HIDDEN ON MOBILE/TABLET -->
    <div class="header-search desktop-search">
      <form action="{{ routes.search_url }}" method="get" class="search-form">
        <div class="search-input-group">
          <input
            type="search"
            name="q"
            placeholder="Search garden furniture..."
            class="search-input"
            value="{{ search.terms | escape }}"
          >
          <button type="submit" class="search-btn" aria-label="Search">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14ZM9.5 14C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14Z" fill="currentColor"/>
            </svg>
          </button>
        </div>
      </form>
    </div>

    <!-- Header Icons -->
    <div class="header-icons">
      {% if shop.customer_accounts_enabled %}
        <a href="{{ routes.account_url }}" class="icon-link" aria-label="Account">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" fill="currentColor"/>
          </svg>
        </a>
      {% endif %}

      <a href="{{ routes.cart_url }}" class="icon-link cart-link" aria-label="Cart">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M17,18C15.89,18 15,18.89 15,20A2,2 0 0,0 17,22A2,2 0 0,0 19,20C19,18.89 18.1,18 17,18M1,2V4H3L6.6,11.59L5.24,14.04C5.09,14.32 5,14.65 5,15A2,2 0 0,0 7,17H19V15H7.42A0.25,0.25 0 0,1 7.17,14.75C7.17,14.7 7.18,14.66 7.2,14.63L8.1,13H15.55C16.3,13 16.96,12.58 17.3,11.97L20.88,5H5.21L4.27,3H1M7,18C5.89,18 5,18.89 5,20A2,2 0 0,0 7,22A2,2 0 0,0 9,20C9,18.89 8.1,18 7,18Z" fill="currentColor"/>
        </svg>
        {% if cart.item_count > 0 %}
          <span class="cart-count">{{ cart.item_count }}</span>
        {% endif %}
      </a>

      <!-- Mobile Menu Toggle - VISIBLE ONLY ON MOBILE/TABLET -->
      <button class="mobile-menu-toggle" aria-label="Open menu" aria-expanded="false" tabindex="0">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </button>
    </div>
  </div>

  <!-- Mobile Navigation Backdrop -->
  <div class="mobile-nav-backdrop"></div>
  <!-- Mobile Navigation Overlay -->
  <div class="mobile-nav-overlay" tabindex="1" aria-modal="true" role="dialog">
    <nav class="mobile-nav">
      <button class="mobile-menu-close" aria-label="Close menu" tabindex="0">&times;</button>
      <div class="mobile-search">
        <form action="{{ routes.search_url }}" method="get" class="mobile-search-form">
          <input
            type="search"
            name="q"
            placeholder="Find Your Peace..."
            class="mobile-search-input"
            value="{{ search.terms | escape }}"
          >
          <button type="submit" class="mobile-search-btn" aria-label="Search">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14ZM9.5 14C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14Z" fill="currentColor"/>
            </svg>
          </button>
        </form>
      </div>
      <div class="mobile-menu-links">
        {% if section.settings.menu.links.size > 0 %}
          {% for link in section.settings.menu.links %}
            <a href="{{ link.url }}" class="mobile-nav-link{% if link.active %} active{% endif %}" tabindex="0">
              {{- link.title -}}
            </a>
          {% endfor %}
        {% else %}
          <a href="/pages/about-us" class="mobile-nav-link">About</a>
          <a href="/pages/contact-us" class="mobile-nav-link">Contact</a>
          <a href="{{ routes.all_products_collection_url }}" class="mobile-nav-link">Products</a>
        {% endif %}
      </div>

      <div class="mobile-menu-footer">
        {% if shop.customer_accounts_enabled %}
          <a href="{{ routes.account_url }}" class="mobile-account-link" tabindex="0">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" fill="currentColor"/>
            </svg>
            Account
          </a>
        {% endif %}
      </div>
    </nav>
  </div>
</header>

<style>
  /* HEADER STYLES - ENHANCED VERSION */
  .agh-header {
    position: sticky;
    top: 0;
    z-index: 9999;
    background: rgba(227, 245, 215, 0.95);
    backdrop-filter: blur(10px);
    border-bottom: 2px solid var(--green200);
    width: 100%;
    box-shadow: 0 4px 20px rgba(28, 66, 25, 0.1);
    transition: all 0.3s ease;
  }

  .header-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 80px;
    transition: height 0.3s ease;
  }

  .header-brand {
    flex-shrink: 0;
  }

  .brand-logo {
    height: 40px;
    width: auto;
    transition: transform 0.3s ease;
  }

  .brand-logo:hover {
    transform: scale(1.05);
  }

  /* DESKTOP NAVIGATION - VISIBLE ON LAPTOPS/DESKTOPS */
  .desktop-nav {
    display: flex;
    gap: 2.5rem;
    margin: 0 2rem;
    opacity: 1;
    transform: translateY(0);
    transition: all 0.3s ease;
  }

  .nav-link {
    text-decoration: none;
    color: var(--green);
    font-weight: 500;
    font-family: var(--heading-font);
    font-size: 1rem;
    transition: all 0.3s ease;
    position: relative;
    padding: 0.5rem 0;
  }

  .nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--green);
    transition: width 0.3s ease;
  }

  .nav-link:hover::after {
    width: 100%;
  }

  .nav-link:hover {
    color: var(--green600);
    transform: translateY(-2px);
  }

  /* DESKTOP SEARCH - VISIBLE ON LAPTOPS/DESKTOPS */
  .desktop-search {
    flex: 1;
    max-width: 400px;
    margin: 0 1rem;
    opacity: 1;
    transform: translateY(0);
    transition: all 0.3s ease;
  }

  .search-input-group {
    position: relative;
    display: flex;
    align-items: center;
  }

  .search-input {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 2px solid var(--green200);
    border-radius: 25px;
    background: var(--white);
    color: var(--green);
    font-family: var(--body-font);
    transition: all 0.3s ease;
  }

  .search-input:focus {
    outline: none;
    border-color: var(--green400);
    box-shadow: 0 0 0 3px rgba(28, 66, 25, 0.1);
  }

  .search-btn {
    position: absolute;
    right: 8px;
    background: none;
    border: none;
    color: var(--green);
    cursor: pointer;
    padding: 4px;
    transition: transform 0.3s ease;
  }

  .search-btn:hover {
    transform: scale(1.1);
  }

  .header-icons {
    display: flex;
    align-items: center;
    gap: 1.5rem;
  }

  .icon-link {
    color: var(--green);
    text-decoration: none;
    transition: all 0.3s ease;
    position: relative;
    padding: 0.5rem;
    border-radius: 50%;
  }

  .icon-link:hover {
    color: var(--green600);
    background: rgba(28, 66, 25, 0.1);
    transform: translateY(-2px);
  }

  .cart-count {
    background: var(--green);
    color: var(--white);
    border-radius: 50%;
    padding: 2px 6px;
    font-size: 0.75rem;
    position: absolute;
    top: -8px;
    right: -8px;
    font-weight: 600;
  }

  /* HAMBURGER MENU - HIDDEN BY DEFAULT */
  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px;
    gap: 4px;
    width: 44px;
    height: 44px;
    align-items: center;
    justify-content: center;
    border-radius: 8px;
    transition: all 0.3s ease;
  }

  .mobile-menu-toggle:hover {
    background-color: rgba(28, 66, 25, 0.1);
    transform: scale(1.05);
  }

  .hamburger-line {
    width: 24px;
    height: 3px;
    background: var(--green);
    border-radius: 2px;
    transition: all 0.3s ease;
  }

  .mobile-menu-toggle.active .hamburger-line:nth-child(1) {
    transform: rotate(45deg) translate(6px, 6px);
  }

  .mobile-menu-toggle.active .hamburger-line:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-toggle.active .hamburger-line:nth-child(3) {
    transform: rotate(-45deg) translate(6px, -6px);
  }

  /* MOBILE NAVIGATION OVERLAY */
  .mobile-nav-overlay {
    position: fixed;
    top: 80px;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(227, 245, 215, 0.98);
    backdrop-filter: blur(10px);
    transform: translateX(-100%);
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 9998;
    overflow-y: auto;
  }

  .mobile-nav-overlay.active {
    transform: translateX(0);
  }

  .mobile-nav {
    padding: 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .mobile-search {
    margin-bottom: 2rem;
  }

  .mobile-search-input {
    width: 100%;
    padding: 1rem;
    border: 2px solid var(--green200);
    border-radius: 25px;
    background: var(--white);
    color: var(--green);
    font-family: var(--body-font);
    transition: all 0.3s ease;
  }

  .mobile-search-input:focus {
    outline: none;
    border-color: var(--green400);
    box-shadow: 0 0 0 3px rgba(28, 66, 25, 0.1);
  }

  .mobile-menu-links {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0;
  }

  .mobile-nav-link {
    text-decoration: none;
    color: var(--green);
    font-size: 1.2rem;
    font-weight: 500;
    font-family: var(--heading-font);
    padding: 1.25rem 0;
    border-bottom: 1px solid var(--green200);
    transition: all 0.3s ease;
    position: relative;
  }

  .mobile-nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--green);
    transition: width 0.3s ease;
  }

  .mobile-nav-link:hover::after {
    width: 100%;
  }

  .mobile-nav-link:hover {
    color: var(--green600);
    padding-left: 1rem;
  }

  .mobile-menu-footer {
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 2px solid var(--green200);
  }

  .mobile-account-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: var(--green);
    text-decoration: none;
    font-family: var(--heading-font);
    font-weight: 500;
    font-size: 1.1rem;
    padding: 1rem 0;
    transition: all 0.3s ease;
  }

  .mobile-account-link:hover {
    color: var(--green600);
    transform: translateX(0.5rem);
  }

  /* RESPONSIVE BREAKPOINTS - ENHANCED TRANSITIONS */

  /* TABLETS (max-width: 1024px) - SHOW HAMBURGER */
  @media screen and (max-width: 1024px) {
    .desktop-nav {
      opacity: 0;
      transform: translateY(-10px);
      pointer-events: none;
    }

    .desktop-search {
      opacity: 0;
      transform: translateY(-10px);
      pointer-events: none;
    }

    .mobile-menu-toggle {
      display: flex;
      opacity: 1;
      transform: translateY(0);
    }

    .header-container {
      height: 70px;
    }

    .mobile-nav-overlay {
      top: 70px;
    }

    .brand-logo {
      height: 35px;
    }
  }

  /* LAPTOPS AND DESKTOPS (min-width: 1025px) - HIDE HAMBURGER */
  @media screen and (min-width: 1025px) {
    .mobile-menu-toggle {
      display: none !important;
      opacity: 0;
      transform: translateY(-10px);
    }

    .mobile-nav-overlay {
      display: none !important;
    }

    .desktop-nav {
      display: flex !important;
      opacity: 1;
      transform: translateY(0);
      pointer-events: auto;
    }

    .desktop-search {
      display: block !important;
      opacity: 1;
      transform: translateY(0);
      pointer-events: auto;
    }
  }

  /* SMALL MOBILE (max-width: 480px) */
  @media screen and (max-width: 480px) {
    .header-container {
      height: 60px;
      padding: 0 0.75rem;
    }

    .brand-logo {
      height: 30px;
    }

    .mobile-nav-overlay {
      top: 60px;
    }

    .mobile-nav {
      padding: 1.5rem;
    }

    .mobile-nav-link {
      font-size: 1.1rem;
      padding: 1rem 0;
    }

    .header-icons {
      gap: 1rem;
    }
  }

  /* EXTRA SMALL MOBILE (max-width: 360px) */
  @media screen and (max-width: 360px) {
    .header-container {
      padding: 0 0.5rem;
    }

    .brand-logo {
      height: 28px;
    }

    .mobile-nav {
      padding: 1rem;
    }
  }

  .mobile-nav-backdrop {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.45);
    z-index: 9997;
    opacity: 0;
    transition: opacity 0.3s;
  }
  .mobile-nav-overlay {
    right: 0;
    left: auto;
    width: 85vw;
    max-width: 400px;
    border-radius: 1rem 0 0 1rem;
    box-shadow: -8px 0 32px rgba(0, 0, 0, 0.12);
    transform: translateX(100%);
    outline: none;
  }
  .mobile-nav-overlay.active {
    transform: translateX(0);
  }
  .mobile-nav-backdrop.active {
    display: block;
    opacity: 1;
  }
  .mobile-menu-close {
    background: none;
    border: none;
    color: var(--green);
    font-size: 2.5rem;
    font-weight: 700;
    position: absolute;
    top: 1.2rem;
    right: 1.5rem;
    cursor: pointer;
    z-index: 10001;
    padding: 0.5rem 1rem;
    border-radius: 50%;
    transition: background 0.2s;
    line-height: 1;
  }
  .mobile-menu-close:hover {
    background: var(--green100);
  }
  .mobile-nav-link,
  .mobile-account-link {
    min-height: 48px;
    display: flex;
    align-items: center;
    font-size: 1.15rem;
    padding-left: 0.5rem;
  }
  .mobile-nav-link.active,
  .mobile-nav-link:focus,
  .mobile-nav-link:hover {
    background: var(--green100);
    color: var(--green600);
    border-radius: 0.5rem;
    padding-left: 1.5rem;
    outline: none;
  }
</style>

<script>
  // ENHANCED MOBILE MENU FUNCTIONALITY
  document.addEventListener('DOMContentLoaded', function () {
    const mobileToggle = document.querySelector('.mobile-menu-toggle');
    const mobileOverlay = document.querySelector('.mobile-nav-overlay');
    const mobileBackdrop = document.querySelector('.mobile-nav-backdrop');
    const closeBtn = document.querySelector('.mobile-menu-close');
    const focusableSelectors = 'a, button, input, [tabindex]:not([tabindex="-1"])';
    let lastFocusedElement = null;

    function openMenu() {
      mobileOverlay.classList.add('active');
      mobileBackdrop.classList.add('active');
      mobileOverlay.setAttribute('aria-hidden', 'false');
      if (mobileToggle) mobileToggle.classList.add('active');
      lastFocusedElement = document.activeElement;
      // Focus first link
      setTimeout(() => {
        const firstLink = mobileOverlay.querySelector(focusableSelectors);
        if (firstLink) firstLink.focus();
      }, 100);
      document.body.style.overflow = 'hidden';
    }
    function closeMenu() {
      mobileOverlay.classList.remove('active');
      mobileBackdrop.classList.remove('active');
      mobileOverlay.setAttribute('aria-hidden', 'true');
      if (mobileToggle) mobileToggle.classList.remove('active');
      if (lastFocusedElement) lastFocusedElement.focus();
      document.body.style.overflow = '';
    }
    if (mobileToggle && mobileOverlay && mobileBackdrop && closeBtn) {
      mobileToggle.addEventListener('click', openMenu);
      closeBtn.addEventListener('click', closeMenu);
      mobileBackdrop.addEventListener('click', closeMenu);
      // Close on Escape
      document.addEventListener('keydown', function (e) {
        if (mobileOverlay.classList.contains('active')) {
          if (e.key === 'Escape') closeMenu();
          // Focus trap
          if (e.key === 'Tab') {
            const focusableEls = Array.from(mobileOverlay.querySelectorAll(focusableSelectors)).filter(
              (el) => !el.disabled && el.offsetParent !== null
            );
            if (focusableEls.length === 0) return;
            const firstEl = focusableEls[0];
            const lastEl = focusableEls[focusableEls.length - 1];
            if (e.shiftKey && document.activeElement === firstEl) {
              e.preventDefault();
              lastEl.focus();
            } else if (!e.shiftKey && document.activeElement === lastEl) {
              e.preventDefault();
              firstEl.focus();
            }
          }
        }
      });
      // Close on link click
      mobileOverlay.querySelectorAll('a').forEach((link) => {
        link.addEventListener('click', closeMenu);
      });
    }
  });
</script>

{% schema %}
{
  "name": "t:general.header",
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "label": "t:labels.menu"
    }
  ]
}
{% endschema %}
<!-- Improved Navbar with all enhancements -->
<nav
  class="NavBar"
  id="navbar"
  role="navigation"
  aria-label="Main Navigation"
>
  <!-- Logo -->
  <div class="logo">
    <a href="../index.html">
      <img
        class="SCM-FullLogo-Header"
        src="../Assets/SCM_FullLogo.png"
        alt="SCM Design Studio Logo"
        width="200"
        height="60"
      >
    </a>
  </div>

  <!-- Navigation Links -->
  <ul class="NavBarNav">
    <li>
      <button
        id="close-sidebar-btn"
        onclick="closeSidebar()"
        aria-label="close sidebar"
        aria-controls="navbar"
      >
        <svg
          width="18"
          height="18"
          viewBox="0 0 18 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M1.71973 16.2793L16.2796 1.71943"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
          <path
            d="M16.2803 16.2793L1.7204 1.71943"
            stroke="white"
            stroke-width="2"
            stroke-linecap="round"
          />
        </svg>
      </button>
    </li>
    <li class="NavItem">
      <a class="Nav-Link" href="../index.html" role="menuitem">Home</a>
    </li>
    <li class="NavItem">
      <a class="Nav-Link" href="../About.html" role="menuitem">About</a>
    </li>
    <li class="NavItem">
      <a class="Nav-Link" href="../Services.html" role="menuitem">Services</a>
    </li>
    <li class="NavItem">
      <a class="Nav-Link" href="../Projects.html" role="menuitem">Projects</a>
    </li>
    <li class="NavItem">
      <a
        id="Contact-CTA-Hero"
        class="Nav-Link"
        href="../ContactPage.html"
        role="menuitem"
        >Contact</a
      >
    </li>
  </ul>
</nav>

<!-- Mobile menu button -->
<button
  id="open-sidebar-btn"
  onclick="openSidebar() "
  aria-label="open sidebar"
  aria-expanded="false"
  aria-controls="navbar"
  aria-haspopup="true"
>
  <svg
    width="20"
    height="10"
    viewBox="0 0 20 10"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <line y1="1" x2="20" y2="1" stroke="white" stroke-width="2" />
    <line y1="5" x2="20" y2="5" stroke="white" stroke-width="2" />
    <line y1="9" x2="20" y2="9" stroke="white" stroke-width="2" />
  </svg>
</button>

<!-- Overlay for mobile menu -->
<div id="overlay" onclick="closeSidebar() " aria-hidden="true"></div>

<script>
  // Navigation functionality and accessibility
  document.addEventListener('DOMContentLoaded', function () {
    // Get elements with proper error checking
    const openButton = document.getElementById('open-sidebar-btn');
    const closeButton = document.getElementById('close-sidebar-btn');
    const navbar = document.querySelector('.NavBar'); // Using class selector instead of ID
    const overlay = document.getElementById('overlay');

    // Log which elements were found for debugging
    console.log('Elements found:', {
      openButton: !!openButton,
      closeButton: !!closeButton,
      navbar: !!navbar,
      overlay: !!overlay,
    });

    // Set current page as active and mark with aria-current
    const currentPage = window.location.pathname.split('/').pop().toLowerCase();
    const navLinks = document.querySelectorAll('.Nav-Link');

    navLinks.forEach((link) => {
      // Check if this is the current page
      const linkHref = link.getAttribute('href').toLowerCase();
      if (linkHref.includes(currentPage) || (currentPage === '' && linkHref.includes('index.html'))) {
        link.classList.add('active');
        link.setAttribute('aria-current', 'page');
      }

      // Ensure all links have accessible names
      if (!link.textContent.trim()) {
        const linkText = link.getAttribute('href').split('/').pop().split('.')[0];
        link.setAttribute('aria-label', linkText);
      }
    });

    // Exit if critical elements are missing
    if (!navbar) {
      console.error('Critical element navbar not found');
      return;
    }

    const media = window.matchMedia('(width < 700px)');

    media.addEventListener('change', (e) => updateNavbar(e));

    function updateNavbar(e) {
      const isMobile = e.matches;
      console.log('Is mobile:', isMobile);
      if (isMobile) {
        navbar.setAttribute('inert', '');
      } else {
        // desktop device
        navbar.removeAttribute('inert');
      }
    }

    function openSidebar() {
      console.log('Opening sidebar');
      navbar.classList.add('show');
      if (overlay) overlay.classList.add('show');
      if (openButton) {
        openButton.setAttribute('aria-expanded', 'true');
        openButton.setAttribute('aria-hidden', 'true');
      }
      navbar.removeAttribute('inert');

      // Trap focus inside the sidebar when open
      const focusableElements = navbar.querySelectorAll(
        'a, button, input, select, textarea, [tabindex]:not([tabindex="-1"])'
      );
      if (focusableElements.length > 0) {
        setTimeout(() => focusableElements[0].focus(), 100);
      }
    }

    function closeSidebar() {
      console.log('Closing sidebar');
      navbar.classList.remove('show');
      if (overlay) overlay.classList.remove('show');
      if (openButton) {
        openButton.setAttribute('aria-expanded', 'false');
        openButton.setAttribute('aria-hidden', 'false');
      }
      navbar.setAttribute('inert', '');

      // Return focus to the open button
      if (openButton) {
        setTimeout(() => openButton.focus(), 100);
      }
    }

    // Add event listeners safely
    if (openButton) {
      openButton.addEventListener('click', openSidebar);
    }

    if (closeButton) {
      closeButton.addEventListener('click', closeSidebar);
    }

    if (overlay) {
      overlay.addEventListener('click', closeSidebar);
    }

    // For Bookmark Links
    navLinks.forEach((link) => {
      link.addEventListener('click', () => {
        if (window.matchMedia('(width < 700px)').matches) {
          closeSidebar();
        }
      });
    });

    // Handle keyboard navigation
    document.addEventListener('keydown', function (e) {
      if (e.key === 'Escape' && navbar.classList.contains('show')) {
        closeSidebar();
      }
    });

    // Initialize navbar state
    updateNavbar(media);

    // Make functions available globally for inline onclick handlers
    window.openSidebar = openSidebar;
    window.closeSidebar = closeSidebar;
  });
</script>

<script>
  // Fixed Accordion Functionality for FAQ Section

  document.addEventListener('DOMContentLoaded', function () {
    // FAQ Accordion Functionality
    const faqQuestions = document.querySelectorAll('.faq-question');

    // Initialize accordion - ensure all answers are hidden initially
    faqQuestions.forEach((question) => {
      const answer = question.nextElementSibling;
      question.classList.remove('active');
      answer.classList.remove('show');
    });

    faqQuestions.forEach((question) => {
      question.addEventListener('click', () => {
        const answer = question.nextElementSibling;
        const isActive = question.classList.contains('active');

        // Close all other FAQs
        faqQuestions.forEach((q) => {
          q.classList.remove('active');
          q.nextElementSibling.classList.remove('show');
        });

        // Toggle current FAQ
        if (!isActive) {
          question.classList.add('active');
          answer.classList.add('show');
        }
      });
    });
  });
</script>
