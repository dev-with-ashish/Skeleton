{% doc %}
  @prompt
    create a universal block that can be add in any section of a shopify theme even can be added under base theme default product template too : this block will be above the product buy noe and add to cart button displaying some information to make the customer trust 1. COD Available 2. Open Box Delivery 3. InStore Pickup :: each of this info will open a popup automaticaly when user will be on it demonstrating all three one by one through animation create everything by yourself, option to adjust animation timings, option to adjust animation timings
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-trust-badges-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    padding: 20px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    margin: 16px 0;
    position: relative;
    flex-wrap: wrap;
  }

  .ai-trust-badge-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    padding: 16px;
    border-radius: {{ block.settings.badge_border_radius }}px;
    background-color: {{ block.settings.badge_background_color }};
    border: 1px solid {{ block.settings.badge_border_color }};
    cursor: pointer;
    transition: all {{ block.settings.hover_transition_duration }}ms ease;
    position: relative;
    min-width: 120px;
    text-align: center;
  }

  .ai-trust-badge-{{ ai_gen_id }}:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    background-color: {{ block.settings.badge_hover_color }};
  }

  .ai-trust-badge-icon-{{ ai_gen_id }} {
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    color: {{ block.settings.icon_color }};
    transition: color {{ block.settings.hover_transition_duration }}ms ease;
  }

  .ai-trust-badge-{{ ai_gen_id }}:hover .ai-trust-badge-icon-{{ ai_gen_id }} {
    color: {{ block.settings.icon_hover_color }};
  }

  .ai-trust-badge-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_font_size }}px;
    font-weight: 600;
    color: {{ block.settings.text_color }};
    margin: 0;
    line-height: 1.2;
  }

  .ai-trust-badge-subtitle-{{ ai_gen_id }} {
    font-size: {{ block.settings.subtitle_font_size }}px;
    color: {{ block.settings.subtitle_color }};
    margin: 0;
    line-height: 1.3;
  }

  .ai-trust-popup-overlay-{{ ai_gen_id }} {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transition: all {{ block.settings.popup_transition_duration }}ms ease;
  }

  .ai-trust-popup-overlay-{{ ai_gen_id }}.active {
    opacity: 1;
    visibility: visible;
  }

  .ai-trust-popup-{{ ai_gen_id }} {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.8);
    background-color: {{ block.settings.popup_background_color }};
    border-radius: {{ block.settings.popup_border_radius }}px;
    padding: 30px;
    max-width: 400px;
    width: 90%;
    z-index: 10000;
    transition: all {{ block.settings.popup_transition_duration }}ms ease;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  .ai-trust-popup-overlay-{{ ai_gen_id }}.active .ai-trust-popup-{{ ai_gen_id }} {
    transform: translate(-50%, -50%) scale(1);
  }

  .ai-trust-popup-header-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 20px;
  }

  .ai-trust-popup-icon-{{ ai_gen_id }} {
    width: 40px;
    height: 40px;
    color: {{ block.settings.popup_icon_color }};
  }

  .ai-trust-popup-title-{{ ai_gen_id }} {
    font-size: 20px;
    font-weight: 600;
    color: {{ block.settings.popup_text_color }};
    margin: 0;
  }

  .ai-trust-popup-close-{{ ai_gen_id }} {
    position: absolute;
    top: 15px;
    right: 15px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 5px;
    color: {{ block.settings.popup_text_color }};
    opacity: 0.7;
  }

  .ai-trust-popup-close-{{ ai_gen_id }}:hover {
    opacity: 1;
  }

  .ai-trust-popup-content-{{ ai_gen_id }} {
    color: {{ block.settings.popup_text_color }};
    line-height: 1.6;
  }

  .ai-trust-popup-features-{{ ai_gen_id }} {
    list-style: none;
    padding: 0;
    margin: 15px 0 0;
  }

  .ai-trust-popup-feature-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 8px 0;
    opacity: 0;
    transform: translateX(-20px);
    animation: ai-trust-feature-slide-{{ ai_gen_id }} {{ block.settings.feature_animation_duration }}ms ease forwards;
  }

  .ai-trust-popup-feature-{{ ai_gen_id }}:nth-child(1) { animation-delay: {{ block.settings.feature_stagger_delay }}ms; }
  .ai-trust-popup-feature-{{ ai_gen_id }}:nth-child(2) { animation-delay: {{ block.settings.feature_stagger_delay | times: 2 }}ms; }
  .ai-trust-popup-feature-{{ ai_gen_id }}:nth-child(3) { animation-delay: {{ block.settings.feature_stagger_delay | times: 3 }}ms; }
  .ai-trust-popup-feature-{{ ai_gen_id }}:nth-child(4) { animation-delay: {{ block.settings.feature_stagger_delay | times: 4 }}ms; }

  .ai-trust-popup-feature-icon-{{ ai_gen_id }} {
    width: 16px;
    height: 16px;
    color: {{ block.settings.popup_accent_color }};
    flex-shrink: 0;
  }

  @keyframes ai-trust-feature-slide-{{ ai_gen_id }} {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .ai-trust-auto-demo-indicator-{{ ai_gen_id }} {
    position: absolute;
    top: -5px;
    right: -5px;
    width: 12px;
    height: 12px;
    background-color: {{ block.settings.popup_accent_color }};
    border-radius: 50%;
    animation: ai-trust-pulse-{{ ai_gen_id }} {{ block.settings.pulse_animation_duration }}s infinite;
  }

  @keyframes ai-trust-pulse-{{ ai_gen_id }} {
    0%, 100% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.2); opacity: 0.7; }
  }

  @media screen and (max-width: 749px) {
    .ai-trust-badges-{{ ai_gen_id }} {
      gap: 12px;
      padding: 16px;
    }

    .ai-trust-badge-{{ ai_gen_id }} {
      min-width: 100px;
      padding: 12px;
    }

    .ai-trust-popup-{{ ai_gen_id }} {
      padding: 20px;
      max-width: 350px;
    }
  }
{% endstyle %}

<trust-badges-{{ ai_gen_id }}
  class="ai-trust-badges-{{ ai_gen_id }}"
  data-auto-demo-interval="{{ block.settings.auto_demo_interval }}"
  data-popup-display-duration="{{ block.settings.popup_display_duration }}"
  data-restart-delay="{{ block.settings.restart_delay }}"
  {{ block.shopify_attributes }}
>
  <div
    class="ai-trust-badge-{{ ai_gen_id }}"
    data-popup="cod"
  >
    <div class="ai-trust-badge-icon-{{ ai_gen_id }}">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
      </svg>
    </div>
    <h3 class="ai-trust-badge-title-{{ ai_gen_id }}">{{ block.settings.cod_title }}</h3>
    <p class="ai-trust-badge-subtitle-{{ ai_gen_id }}">{{ block.settings.cod_subtitle }}</p>
    <div class="ai-trust-auto-demo-indicator-{{ ai_gen_id }}"></div>
  </div>

  <div
    class="ai-trust-badge-{{ ai_gen_id }}"
    data-popup="openbox"
  >
    <div class="ai-trust-badge-icon-{{ ai_gen_id }}">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M9 9l3-3 3 3" />
      </svg>
    </div>
    <h3 class="ai-trust-badge-title-{{ ai_gen_id }}">{{ block.settings.openbox_title }}</h3>
    <p class="ai-trust-badge-subtitle-{{ ai_gen_id }}">{{ block.settings.openbox_subtitle }}</p>
    <div class="ai-trust-auto-demo-indicator-{{ ai_gen_id }}"></div>
  </div>

  <div
    class="ai-trust-badge-{{ ai_gen_id }}"
    data-popup="pickup"
  >
    <div class="ai-trust-badge-icon-{{ ai_gen_id }}">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
      </svg>
    </div>
    <h3 class="ai-trust-badge-title-{{ ai_gen_id }}">{{ block.settings.pickup_title }}</h3>
    <p class="ai-trust-badge-subtitle-{{ ai_gen_id }}">{{ block.settings.pickup_subtitle }}</p>
    <div class="ai-trust-auto-demo-indicator-{{ ai_gen_id }}"></div>
  </div>

  <div class="ai-trust-popup-overlay-{{ ai_gen_id }}" data-popup-overlay>
    <div class="ai-trust-popup-{{ ai_gen_id }}">
      <button class="ai-trust-popup-close-{{ ai_gen_id }}" data-popup-close>
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      
      <div class="ai-trust-popup-content-{{ ai_gen_id }}" data-popup-content>
      </div>
    </div>
  </div>
</trust-badges-{{ ai_gen_id }}>

<script>
  (function() {
    class TrustBadges{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentDemo = 0;
        this.demoInterval = null;
        this.isUserInteracting = false;
      }

      connectedCallback() {
        this.badges = this.querySelectorAll('.ai-trust-badge-{{ ai_gen_id }}');
        this.overlay = this.querySelector('[data-popup-overlay]');
        this.popup = this.querySelector('.ai-trust-popup-{{ ai_gen_id }}');
        this.popupContent = this.querySelector('[data-popup-content]');
        this.closeButton = this.querySelector('[data-popup-close]');

        this.autoDemoInterval = parseInt(this.dataset.autoDemoInterval) * 1000;
        this.popupDisplayDuration = parseInt(this.dataset.popupDisplayDuration) * 1000;
        this.restartDelay = parseFloat(this.dataset.restartDelay) * 1000;

        this.setupEventListeners();
        this.startAutoDemo();
      }

      disconnectedCallback() {
        if (this.demoInterval) {
          clearInterval(this.demoInterval);
        }
      }

      setupEventListeners() {
        this.badges.forEach(badge => {
          badge.addEventListener('click', (e) => {
            this.isUserInteracting = true;
            this.showPopup(badge.dataset.popup);
            if (this.demoInterval) {
              clearInterval(this.demoInterval);
            }
          });

          badge.addEventListener('mouseenter', () => {
            this.isUserInteracting = true;
            if (this.demoInterval) {
              clearInterval(this.demoInterval);
            }
          });
        });

        this.closeButton.addEventListener('click', () => {
          this.hidePopup();
        });

        this.overlay.addEventListener('click', (e) => {
          if (e.target === this.overlay) {
            this.hidePopup();
          }
        });

        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && this.overlay.classList.contains('active')) {
            this.hidePopup();
          }
        });
      }

      startAutoDemo() {
        if (this.isUserInteracting) return;

        this.demoInterval = setInterval(() => {
          if (this.isUserInteracting) {
            clearInterval(this.demoInterval);
            return;
          }

          const popupTypes = ['cod', 'openbox', 'pickup'];
          this.showPopup(popupTypes[this.currentDemo]);
          
          setTimeout(() => {
            if (!this.isUserInteracting) {
              this.hidePopup();
            }
          }, this.popupDisplayDuration);

          this.currentDemo = (this.currentDemo + 1) % popupTypes.length;
        }, this.autoDemoInterval);
      }

      showPopup(type) {
        const content = this.getPopupContent(type);
        this.popupContent.innerHTML = content;
        this.overlay.classList.add('active');
        document.body.style.overflow = 'hidden';
      }

      hidePopup() {
        this.overlay.classList.remove('active');
        document.body.style.overflow = '';
        
        if (!this.isUserInteracting) {
          setTimeout(() => {
            this.startAutoDemo();
          }, this.restartDelay);
        }
      }

      getPopupContent(type) {
        const contents = {
          cod: {
            icon: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" /></svg>',
            title: '{{ block.settings.cod_popup_title }}',
            description: '{{ block.settings.cod_popup_description }}',
            features: [
              '{{ block.settings.cod_feature_1 }}',
              '{{ block.settings.cod_feature_2 }}',
              '{{ block.settings.cod_feature_3 }}',
              '{{ block.settings.cod_feature_4 }}'
            ]
          },
          openbox: {
            icon: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M9 9l3-3 3 3" /></svg>',
            title: '{{ block.settings.openbox_popup_title }}',
            description: '{{ block.settings.openbox_popup_description }}',
            features: [
              '{{ block.settings.openbox_feature_1 }}',
              '{{ block.settings.openbox_feature_2 }}',
              '{{ block.settings.openbox_feature_3 }}',
              '{{ block.settings.openbox_feature_4 }}'
            ]
          },
          pickup: {
            icon: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" /></svg>',
            title: '{{ block.settings.pickup_popup_title }}',
            description: '{{ block.settings.pickup_popup_description }}',
            features: [
              '{{ block.settings.pickup_feature_1 }}',
              '{{ block.settings.pickup_feature_2 }}',
              '{{ block.settings.pickup_feature_3 }}',
              '{{ block.settings.pickup_feature_4 }}'
            ]
          }
        };

        const data = contents[type];
        const featuresHtml = data.features
          .filter(feature => feature.trim())
          .map(feature => `
            <li class="ai-trust-popup-feature-{{ ai_gen_id }}">
              <div class="ai-trust-popup-feature-icon-{{ ai_gen_id }}">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
              </div>
              ${feature}
            </li>
          `).join('');

        return `
          <div class="ai-trust-popup-header-{{ ai_gen_id }}">
            <div class="ai-trust-popup-icon-{{ ai_gen_id }}">${data.icon}</div>
            <h3 class="ai-trust-popup-title-{{ ai_gen_id }}">${data.title}</h3>
          </div>
          <p>${data.description}</p>
          <ul class="ai-trust-popup-features-{{ ai_gen_id }}">
            ${featuresHtml}
          </ul>
        `;
      }
    }

    customElements.define('trust-badges-{{ ai_gen_id }}', TrustBadges{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Trust badges",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Animation timing"
    },
    {
      "type": "range",
      "id": "auto_demo_interval",
      "min": 2,
      "max": 9,
      "step": 1,
      "unit": "s",
      "label": "Auto demo interval",
      "default": 5
    },
    {
      "type": "range",
      "id": "popup_display_duration",
      "min": 1,
      "max": 8,
      "step": 1,
      "unit": "s",
      "label": "Popup display duration",
      "default": 3
    },
    {
      "type": "range",
      "id": "restart_delay",
      "min": 0.5,
      "max": 5,
      "step": 0.5,
      "unit": "s",
      "label": "Restart delay",
      "default": 2
    },
    {
      "type": "range",
      "id": "hover_transition_duration",
      "min": 100,
      "max": 1000,
      "step": 50,
      "unit": "ms",
      "label": "Hover transition duration",
      "default": 300
    },
    {
      "type": "range",
      "id": "popup_transition_duration",
      "min": 100,
      "max": 1000,
      "step": 50,
      "unit": "ms",
      "label": "Popup transition duration",
      "default": 300
    },
    {
      "type": "range",
      "id": "feature_animation_duration",
      "min": 200,
      "max": 1000,
      "step": 50,
      "unit": "ms",
      "label": "Feature animation duration",
      "default": 500
    },
    {
      "type": "range",
      "id": "feature_stagger_delay",
      "min": 50,
      "max": 300,
      "step": 25,
      "unit": "ms",
      "label": "Feature stagger delay",
      "default": 100
    },
    {
      "type": "range",
      "id": "pulse_animation_duration",
      "min": 1,
      "max": 4,
      "step": 1,
      "unit": "s",
      "label": "Pulse animation duration",
      "default": 2
    },
    {
      "type": "header",
      "content": "COD Badge"
    },
    {
      "type": "text",
      "id": "cod_title",
      "label": "COD title",
      "default": "COD Available"
    },
    {
      "type": "text",
      "id": "cod_subtitle",
      "label": "COD subtitle",
      "default": "Pay on delivery"
    },
    {
      "type": "text",
      "id": "cod_popup_title",
      "label": "COD popup title",
      "default": "Cash on Delivery"
    },
    {
      "type": "textarea",
      "id": "cod_popup_description",
      "label": "COD popup description",
      "default": "Pay when your order arrives at your doorstep. No advance payment required."
    },
    {
      "type": "text",
      "id": "cod_feature_1",
      "label": "COD feature 1",
      "default": "No advance payment needed"
    },
    {
      "type": "text",
      "id": "cod_feature_2",
      "label": "COD feature 2",
      "default": "Pay only after receiving your order"
    },
    {
      "type": "text",
      "id": "cod_feature_3",
      "label": "COD feature 3",
      "default": "Available across India"
    },
    {
      "type": "text",
      "id": "cod_feature_4",
      "label": "COD feature 4",
      "default": "Secure and convenient"
    },
    {
      "type": "header",
      "content": "Open Box Badge"
    },
    {
      "type": "text",
      "id": "openbox_title",
      "label": "Open box title",
      "default": "Open Box Delivery"
    },
    {
      "type": "text",
      "id": "openbox_subtitle",
      "label": "Open box subtitle",
      "default": "Check before you pay"
    },
    {
      "type": "text",
      "id": "openbox_popup_title",
      "label": "Open box popup title",
      "default": "Open Box Delivery"
    },
    {
      "type": "textarea",
      "id": "openbox_popup_description",
      "label": "Open box popup description",
      "default": "Inspect your order before making payment. Open and check the product quality at your doorstep."
    },
    {
      "type": "text",
      "id": "openbox_feature_1",
      "label": "Open box feature 1",
      "default": "Inspect product before payment"
    },
    {
      "type": "text",
      "id": "openbox_feature_2",
      "label": "Open box feature 2",
      "default": "Check quality and authenticity"
    },
    {
      "type": "text",
      "id": "openbox_feature_3",
      "label": "Open box feature 3",
      "default": "Return if not satisfied"
    },
    {
      "type": "text",
      "id": "openbox_feature_4",
      "label": "Open box feature 4",
      "default": "100% genuine products"
    },
    {
      "type": "header",
      "content": "Store Pickup Badge"
    },
    {
      "type": "text",
      "id": "pickup_title",
      "label": "Pickup title",
      "default": "InStore Pickup"
    },
    {
      "type": "text",
      "id": "pickup_subtitle",
      "label": "Pickup subtitle",
      "default": "Collect from store"
    },
    {
      "type": "text",
      "id": "pickup_popup_title",
      "label": "Pickup popup title",
      "default": "InStore Pickup"
    },
    {
      "type": "textarea",
      "id": "pickup_popup_description",
      "label": "Pickup popup description",
      "default": "Skip delivery charges and collect your order directly from our store. Quick and convenient."
    },
    {
      "type": "text",
      "id": "pickup_feature_1",
      "label": "Pickup feature 1",
      "default": "No delivery charges"
    },
    {
      "type": "text",
      "id": "pickup_feature_2",
      "label": "Pickup feature 2",
      "default": "Ready in 2-4 hours"
    },
    {
      "type": "text",
      "id": "pickup_feature_3",
      "label": "Pickup feature 3",
      "default": "Multiple store locations"
    },
    {
      "type": "text",
      "id": "pickup_feature_4",
      "label": "Pickup feature 4",
      "default": "Flexible pickup timings"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#f8f9fa"
    },
    {
      "type": "color",
      "id": "badge_background_color",
      "label": "Badge background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "badge_hover_color",
      "label": "Badge hover color",
      "default": "#f0f0f0"
    },
    {
      "type": "color",
      "id": "badge_border_color",
      "label": "Badge border color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "subtitle_color",
      "label": "Subtitle color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Icon color",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "icon_hover_color",
      "label": "Icon hover color",
      "default": "#0056b3"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Container border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "badge_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Badge border radius",
      "default": 6
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 20,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Icon size",
      "default": 32
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Title font size",
      "default": 14
    },
    {
      "type": "range",
      "id": "subtitle_font_size",
      "min": 10,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Subtitle font size",
      "default": 12
    },
    {
      "type": "header",
      "content": "Popup style"
    },
    {
      "type": "color",
      "id": "popup_background_color",
      "label": "Popup background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "popup_text_color",
      "label": "Popup text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "popup_icon_color",
      "label": "Popup icon color",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "popup_accent_color",
      "label": "Popup accent color",
      "default": "#28a745"
    },
    {
      "type": "range",
      "id": "popup_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Popup border radius",
      "default": 12
    }
  ],
  "presets": [
    {
      "name": "Trust badges"
    }
  ]
}
{% endschema %}