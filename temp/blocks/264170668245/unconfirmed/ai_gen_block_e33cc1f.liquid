{% doc %}
  @prompt
    a product section that with provide like the shopify app live product options where admin can design custom product for live customizations
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-product-customizer-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 40px;
    max-width: 1200px;
    margin: 0 auto;
    padding: 40px 20px;
    font-family: {{ settings.type_primary_font.family }}, sans-serif;
  }

  .ai-customizer-preview-{{ ai_gen_id }} {
    position: sticky;
    top: 20px;
    height: fit-content;
  }

  .ai-preview-container-{{ ai_gen_id }} {
    position: relative;
    background: {{ block.settings.preview_bg_color }};
    border-radius: {{ block.settings.preview_border_radius }}px;
    padding: 40px;
    text-align: center;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  .ai-preview-product-{{ ai_gen_id }} {
    position: relative;
    max-width: 100%;
    height: auto;
    border-radius: 8px;
  }

  .ai-preview-text-overlay-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--ai-text-color-{{ ai_gen_id }});
    font-size: var(--ai-text-size-{{ ai_gen_id }});
    font-weight: var(--ai-text-weight-{{ ai_gen_id }});
    text-align: center;
    white-space: nowrap;
    pointer-events: none;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
  }

  .ai-preview-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 400px;
    background: #f4f4f4;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-preview-placeholder-{{ ai_gen_id }} svg {
    width: 200px;
    height: 200px;
    opacity: 0.3;
  }

  .ai-customizer-controls-{{ ai_gen_id }} {
    background: {{ block.settings.controls_bg_color }};
    border-radius: {{ block.settings.controls_border_radius }}px;
    padding: 30px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  .ai-controls-header-{{ ai_gen_id }} {
    margin-bottom: 30px;
  }

  .ai-controls-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    color: {{ block.settings.title_color }};
    margin: 0 0 10px;
    font-weight: 600;
  }

  .ai-controls-subtitle-{{ ai_gen_id }} {
    color: {{ block.settings.subtitle_color }};
    font-size: {{ block.settings.subtitle_size }}px;
    margin: 0;
  }

  .ai-control-group-{{ ai_gen_id }} {
    margin-bottom: 25px;
  }

  .ai-control-label-{{ ai_gen_id }} {
    display: block;
    font-weight: 600;
    color: {{ block.settings.label_color }};
    margin-bottom: 8px;
    font-size: 14px;
  }

  .ai-text-input-{{ ai_gen_id }} {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid {{ block.settings.input_border_color }};
    border-radius: {{ block.settings.input_border_radius }}px;
    font-size: 16px;
    transition: border-color 0.3s ease;
  }

  .ai-text-input-{{ ai_gen_id }}:focus {
    outline: none;
    border-color: {{ block.settings.input_focus_color }};
  }

  .ai-color-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(40px, 1fr));
    gap: 8px;
    margin-top: 8px;
  }

  .ai-color-option-{{ ai_gen_id }} {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 3px solid transparent;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
  }

  .ai-color-option-{{ ai_gen_id }}.active {
    border-color: {{ block.settings.accent_color }};
    transform: scale(1.1);
  }

  .ai-color-option-{{ ai_gen_id }}:hover {
    transform: scale(1.05);
  }

  .ai-size-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 8px;
    margin-top: 8px;
  }

  .ai-size-option-{{ ai_gen_id }} {
    padding: 8px 12px;
    border: 2px solid {{ block.settings.input_border_color }};
    border-radius: {{ block.settings.input_border_radius }}px;
    background: white;
    cursor: pointer;
    text-align: center;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .ai-size-option-{{ ai_gen_id }}.active {
    border-color: {{ block.settings.accent_color }};
    background: {{ block.settings.accent_color }};
    color: white;
  }

  .ai-font-select-{{ ai_gen_id }} {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid {{ block.settings.input_border_color }};
    border-radius: {{ block.settings.input_border_radius }}px;
    font-size: 16px;
    background: white;
    cursor: pointer;
  }

  .ai-add-to-cart-{{ ai_gen_id }} {
    width: 100%;
    padding: 16px 24px;
    background: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    border: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: 18px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 20px;
  }

  .ai-add-to-cart-{{ ai_gen_id }}:hover {
    background: {{ block.settings.button_hover_color }};
    transform: translateY(-2px);
  }

  .ai-price-display-{{ ai_gen_id }} {
    text-align: center;
    margin: 20px 0;
    padding: 15px;
    background: {{ block.settings.price_bg_color }};
    border-radius: {{ block.settings.input_border_radius }}px;
  }

  .ai-price-label-{{ ai_gen_id }} {
    font-size: 14px;
    color: {{ block.settings.subtitle_color }};
    margin-bottom: 5px;
  }

  .ai-price-amount-{{ ai_gen_id }} {
    font-size: 24px;
    font-weight: 700;
    color: {{ block.settings.price_color }};
  }

  @media screen and (max-width: 768px) {
    .ai-product-customizer-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 20px;
      padding: 20px 15px;
    }

    .ai-customizer-preview-{{ ai_gen_id }} {
      position: static;
      order: 2;
    }

    .ai-preview-container-{{ ai_gen_id }} {
      padding: 20px;
    }

    .ai-preview-placeholder-{{ ai_gen_id }} {
      height: 300px;
    }

    .ai-color-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(6, 1fr);
    }
  }
{% endstyle %}

<product-customizer-{{ ai_gen_id }}
  class="ai-product-customizer-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
  data-product-id="{{ product.id }}"
  data-base-price="{{ product.price }}"
>
  <div class="ai-customizer-controls-{{ ai_gen_id }}">
    <div class="ai-controls-header-{{ ai_gen_id }}">
      <h2 class="ai-controls-title-{{ ai_gen_id }}">{{ block.settings.title }}</h2>
      {% if block.settings.subtitle != blank %}
        <p class="ai-controls-subtitle-{{ ai_gen_id }}">{{ block.settings.subtitle }}</p>
      {% endif %}
    </div>

    <div class="ai-control-group-{{ ai_gen_id }}">
      <label class="ai-control-label-{{ ai_gen_id }}" for="custom-text-{{ ai_gen_id }}">
        {{ block.settings.text_label }}
      </label>
      <input
        type="text"
        id="custom-text-{{ ai_gen_id }}"
        class="ai-text-input-{{ ai_gen_id }}"
        placeholder="{{ block.settings.text_placeholder }}"
        maxlength="{{ block.settings.max_text_length }}"
        data-control="text"
      >
    </div>

    <div class="ai-control-group-{{ ai_gen_id }}">
      <label class="ai-control-label-{{ ai_gen_id }}">{{ block.settings.color_label }}</label>
      <div class="ai-color-grid-{{ ai_gen_id }}">
        <div
          class="ai-color-option-{{ ai_gen_id }} active"
          style="background-color: {{ block.settings.color_1 }}"
          data-control="color"
          data-value="{{ block.settings.color_1 }}"
        ></div>
        <div
          class="ai-color-option-{{ ai_gen_id }}"
          style="background-color: {{ block.settings.color_2 }}"
          data-control="color"
          data-value="{{ block.settings.color_2 }}"
        ></div>
        <div
          class="ai-color-option-{{ ai_gen_id }}"
          style="background-color: {{ block.settings.color_3 }}"
          data-control="color"
          data-value="{{ block.settings.color_3 }}"
        ></div>
        <div
          class="ai-color-option-{{ ai_gen_id }}"
          style="background-color: {{ block.settings.color_4 }}"
          data-control="color"
          data-value="{{ block.settings.color_4 }}"
        ></div>
        <div
          class="ai-color-option-{{ ai_gen_id }}"
          style="background-color: {{ block.settings.color_5 }}"
          data-control="color"
          data-value="{{ block.settings.color_5 }}"
        ></div>
        <div
          class="ai-color-option-{{ ai_gen_id }}"
          style="background-color: {{ block.settings.color_6 }}"
          data-control="color"
          data-value="{{ block.settings.color_6 }}"
        ></div>
      </div>
    </div>

    <div class="ai-control-group-{{ ai_gen_id }}">
      <label class="ai-control-label-{{ ai_gen_id }}" for="font-select-{{ ai_gen_id }}">
        {{ block.settings.font_label }}
      </label>
      <select id="font-select-{{ ai_gen_id }}" class="ai-font-select-{{ ai_gen_id }}" data-control="font">
        <option value="Arial, sans-serif">Arial</option>
        <option value="Georgia, serif">Georgia</option>
        <option value="'Times New Roman', serif">Times New Roman</option>
        <option value="'Courier New', monospace">Courier New</option>
        <option value="Helvetica, sans-serif">Helvetica</option>
        <option value="Impact, sans-serif">Impact</option>
      </select>
    </div>

    <div class="ai-control-group-{{ ai_gen_id }}">
      <label class="ai-control-label-{{ ai_gen_id }}">{{ block.settings.size_label }}</label>
      <div class="ai-size-grid-{{ ai_gen_id }}">
        <div class="ai-size-option-{{ ai_gen_id }}" data-control="size" data-value="small">Small</div>
        <div class="ai-size-option-{{ ai_gen_id }} active" data-control="size" data-value="medium">Medium</div>
        <div class="ai-size-option-{{ ai_gen_id }}" data-control="size" data-value="large">Large</div>
      </div>
    </div>

    <div class="ai-price-display-{{ ai_gen_id }}">
      <div class="ai-price-label-{{ ai_gen_id }}">Total Price</div>
      <div class="ai-price-amount-{{ ai_gen_id }}" data-price-display>
        {{ product.price | money }}
      </div>
    </div>

    <button class="ai-add-to-cart-{{ ai_gen_id }}" data-add-to-cart>
      {{ block.settings.button_text }}
    </button>
  </div>

  <div class="ai-customizer-preview-{{ ai_gen_id }}">
    <div class="ai-preview-container-{{ ai_gen_id }}">
      {% if block.settings.preview_image %}
        <div style="position: relative;">
          <img
            src="{{ block.settings.preview_image | image_url: width: 500 }}"
            alt="Product preview"
            class="ai-preview-product-{{ ai_gen_id }}"
            loading="lazy"
          >
          <div
            class="ai-preview-text-overlay-{{ ai_gen_id }}"
            data-preview-text
            style="
              --ai-text-color-{{ ai_gen_id }}: {{ block.settings.color_1 }};
              --ai-text-size-{{ ai_gen_id }}: 24px;
              --ai-text-weight-{{ ai_gen_id }}: 400;
            "
          >
            {{ block.settings.preview_text }}
          </div>
        </div>
      {% else %}
        <div class="ai-preview-placeholder-{{ ai_gen_id }}">
          {{ 'product-1' | placeholder_svg_tag }}
          <div
            class="ai-preview-text-overlay-{{ ai_gen_id }}"
            data-preview-text
            style="
              --ai-text-color-{{ ai_gen_id }}: {{ block.settings.color_1 }};
              --ai-text-size-{{ ai_gen_id }}: 24px;
              --ai-text-weight-{{ ai_gen_id }}: 400;
            "
          >
            {{ block.settings.preview_text }}
          </div>
        </div>
      {% endif %}
    </div>
  </div>
</product-customizer-{{ ai_gen_id }}>

<script>
  (function() {
    class ProductCustomizer{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.customizations = {
          text: '{{ block.settings.preview_text }}',
          color: '{{ block.settings.color_1 }}',
          font: 'Arial, sans-serif',
          size: 'medium'
        };
        this.basePrice = parseInt(this.dataset.basePrice);
        this.sizePricing = {
          small: 0,
          medium: {{ block.settings.medium_price_add }},
          large: {{ block.settings.large_price_add }}
        };
      }

      connectedCallback() {
        this.setupEventListeners();
        this.updatePreview();
        this.updatePrice();
      }

      setupEventListeners() {
        const textInput = this.querySelector('[data-control="text"]');
        const colorOptions = this.querySelectorAll('[data-control="color"]');
        const fontSelect = this.querySelector('[data-control="font"]');
        const sizeOptions = this.querySelectorAll('[data-control="size"]');
        const addToCartBtn = this.querySelector('[data-add-to-cart]');

        textInput.addEventListener('input', (e) => {
          this.customizations.text = e.target.value || '{{ block.settings.preview_text }}';
          this.updatePreview();
        });

        colorOptions.forEach(option => {
          option.addEventListener('click', () => {
            colorOptions.forEach(opt => opt.classList.remove('active'));
            option.classList.add('active');
            this.customizations.color = option.dataset.value;
            this.updatePreview();
          });
        });

        fontSelect.addEventListener('change', (e) => {
          this.customizations.font = e.target.value;
          this.updatePreview();
        });

        sizeOptions.forEach(option => {
          option.addEventListener('click', () => {
            sizeOptions.forEach(opt => opt.classList.remove('active'));
            option.classList.add('active');
            this.customizations.size = option.dataset.value;
            this.updatePreview();
            this.updatePrice();
          });
        });

        addToCartBtn.addEventListener('click', () => {
          this.addToCart();
        });
      }

      updatePreview() {
        const previewText = this.querySelector('[data-preview-text]');
        const sizeMap = {
          small: '18px',
          medium: '24px',
          large: '32px'
        };

        previewText.textContent = this.customizations.text;
        previewText.style.setProperty('--ai-text-color-{{ ai_gen_id }}', this.customizations.color);
        previewText.style.setProperty('--ai-text-size-{{ ai_gen_id }}', sizeMap[this.customizations.size]);
        previewText.style.fontFamily = this.customizations.font;
      }

      updatePrice() {
        const priceDisplay = this.querySelector('[data-price-display]');
        const totalPrice = this.basePrice + this.sizePricing[this.customizations.size];
        
        const formatter = new Intl.NumberFormat('{{ shop.locale }}', {
          style: 'currency',
          currency: '{{ shop.currency }}'
        });
        
        priceDisplay.textContent = formatter.format(totalPrice / 100);
      }

      addToCart() {
        const formData = new FormData();
        formData.append('id', this.dataset.productId);
        formData.append('quantity', '1');
        formData.append('properties[Custom Text]', this.customizations.text);
        formData.append('properties[Text Color]', this.customizations.color);
        formData.append('properties[Font]', this.customizations.font);
        formData.append('properties[Size]', this.customizations.size);

        fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          window.location.href = '/cart';
        })
        .catch(error => {
          console.error('Error adding to cart:', error);
          alert('Error adding product to cart. Please try again.');
        });
      }
    }

    customElements.define('product-customizer-{{ ai_gen_id }}', ProductCustomizer{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Product customizer",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Customize Your Product"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Make it uniquely yours with custom text and colors"
    },
    {
      "type": "text",
      "id": "preview_text",
      "label": "Default preview text",
      "default": "Your Text Here"
    },
    {
      "type": "image_picker",
      "id": "preview_image",
      "label": "Product preview image"
    },
    {
      "type": "header",
      "content": "Control labels"
    },
    {
      "type": "text",
      "id": "text_label",
      "label": "Text input label",
      "default": "Custom Text"
    },
    {
      "type": "text",
      "id": "text_placeholder",
      "label": "Text input placeholder",
      "default": "Enter your custom text"
    },
    {
      "type": "text",
      "id": "color_label",
      "label": "Color selection label",
      "default": "Text Color"
    },
    {
      "type": "text",
      "id": "font_label",
      "label": "Font selection label",
      "default": "Font Style"
    },
    {
      "type": "text",
      "id": "size_label",
      "label": "Size selection label",
      "default": "Text Size"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Add to cart button text",
      "default": "Add to Cart"
    },
    {
      "type": "header",
      "content": "Text options"
    },
    {
      "type": "range",
      "id": "max_text_length",
      "min": 10,
      "max": 100,
      "step": 5,
      "label": "Maximum text length",
      "default": 50
    },
    {
      "type": "header",
      "content": "Color options"
    },
    {
      "type": "color",
      "id": "color_1",
      "label": "Color 1",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "color_2",
      "label": "Color 2",
      "default": "#FF0000"
    },
    {
      "type": "color",
      "id": "color_3",
      "label": "Color 3",
      "default": "#0000FF"
    },
    {
      "type": "color",
      "id": "color_4",
      "label": "Color 4",
      "default": "#00FF00"
    },
    {
      "type": "color",
      "id": "color_5",
      "label": "Color 5",
      "default": "#FF00FF"
    },
    {
      "type": "color",
      "id": "color_6",
      "label": "Color 6",
      "default": "#FFFF00"
    },
    {
      "type": "header",
      "content": "Pricing"
    },
    {
      "type": "range",
      "id": "medium_price_add",
      "min": 0,
      "max": 1000,
      "step": 50,
      "label": "Medium size price addition (in cents)",
      "default": 0
    },
    {
      "type": "range",
      "id": "large_price_add",
      "min": 0,
      "max": 2000,
      "step": 50,
      "label": "Large size price addition (in cents)",
      "default": 500
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "preview_bg_color",
      "label": "Preview background color",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "controls_bg_color",
      "label": "Controls background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "subtitle_color",
      "label": "Subtitle color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "label_color",
      "label": "Label color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Accent color",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#0056b3"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "input_border_color",
      "label": "Input border color",
      "default": "#dddddd"
    },
    {
      "type": "color",
      "id": "input_focus_color",
      "label": "Input focus color",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "price_bg_color",
      "label": "Price background color",
      "default": "#f0f8ff"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price text color",
      "default": "#007bff"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 18,
      "max": 36,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 28
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Subtitle size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Border radius"
    },
    {
      "type": "range",
      "id": "preview_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Preview border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "controls_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Controls border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "input_border_radius",
      "min": 0,
      "max": 12,
      "step": 1,
      "unit": "px",
      "label": "Input border radius",
      "default": 6
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 12,
      "step": 1,
      "unit": "px",
      "label": "Button border radius",
      "default": 6
    }
  ],
  "presets": [
    {
      "name": "Product customizer"
    }
  ]
}
{% endschema %}