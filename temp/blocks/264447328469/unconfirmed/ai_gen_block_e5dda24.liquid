{% doc %}
  @prompt
    a custom product section with option to select product to show title and price according to variants if product have variants and in the left a three layer setup 2 layers for admin 1st base layer is for the shape png which will be used for masking on the 2nd layer (2nd admin layer will be a overlay png having mask of the base shape) and the third layer will be a user upload image layer between the base shape and the overlay png, apply base shape masking on the overlay png too, make variants button style, display the variants as separate option groups means if the product have two variant option like size and material show options group seperatly, make sure the price updates when variant is selected as it stops updating when you changed it to seperate option group, make sure it updates the product price when any variant selection is changed, price should update accourding to any product variant change, show user upload image button in the right too, make the whole design responsive for all devices, on mobile make the left panel on top and right panel below it, the left section do not get displayed on some device check styling, make sure left and right panels both  are have equal width and height always and all the buttons in the right panel fill their row together, make outer container of both left and right panel squared shape means both panels have both width=height same for both panels, make all elements of the right panel responsive to its container no need to scroll every things fit in the squared shape right panel, oh its messing with my prompt make everything responsive by yourself every panel everything so nothing gets hidden and no need to scroll, make left panel squared shape always but height of left panel mainting height of right panel, make both the panels squared shape and all the button responsive in size to the right panel, add buy now and add to cart button in the right make sure the user uploaded image get add to the cart with the product and appear in the admin panel in the order section attached with the orderid, make the variant buttons resopnsive in size according to the over all section styling so it does not overlap or hidden , keep everything as it is all function are fine just make the variant buttons resopnsive in size according to the over all section styling so it does not overlap or hidden , keep everthing as it is just change styling of all button for one variant option in a single line
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-custom-product-{{ ai_gen_id }} {
    display: flex;
    gap: 2vw;
    max-width: 100%;
    margin: 0 auto;
    padding: 1vw;
    box-sizing: border-box;
  }

  .ai-left-panel-{{ ai_gen_id }}, .ai-right-panel-{{ ai_gen_id }} {
    flex: 1;
    aspect-ratio: 1;
    min-height: 0;
    box-sizing: border-box;
  }

  .ai-left-panel-{{ ai_gen_id }} {
    position: relative;
    background-color: {{ block.settings.left_panel_bg_color }};
    border-radius: 1vw;
    overflow: hidden;
  }

  .ai-right-panel-{{ ai_gen_id }} {
    background-color: {{ block.settings.right_panel_bg_color }};
    border-radius: 1vw;
    padding: 2vw;
    display: flex;
    flex-direction: column;
    gap: 1.5vw;
    overflow: hidden;
  }

  .ai-layer-container-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .ai-base-layer-{{ ai_gen_id }}, .ai-overlay-layer-{{ ai_gen_id }}, .ai-user-layer-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .ai-base-layer-{{ ai_gen_id }} img, .ai-overlay-layer-{{ ai_gen_id }} img, .ai-user-layer-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .ai-user-layer-{{ ai_gen_id }} {
    z-index: 1;
  }

  .ai-overlay-layer-{{ ai_gen_id }} {
    z-index: 2;
  }

  .ai-base-layer-{{ ai_gen_id }} img {
    z-index: 0;
  }

  .ai-user-layer-{{ ai_gen_id }} img, .ai-overlay-layer-{{ ai_gen_id }} img {
    mask: url({{ block.settings.base_shape_image | image_url }}) no-repeat center / contain;
    -webkit-mask: url({{ block.settings.base_shape_image | image_url }}) no-repeat center / contain;
  }

  .ai-product-title-{{ ai_gen_id }} {
    font-size: clamp(1rem, 2.5vw, 1.8rem);
    font-weight: 600;
    color: {{ block.settings.text_color }};
    margin: 0;
    line-height: 1.2;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }

  .ai-product-price-{{ ai_gen_id }} {
    font-size: clamp(1.2rem, 3vw, 2rem);
    font-weight: 700;
    color: {{ block.settings.price_color }};
    margin: 0;
  }

  .ai-variant-group-{{ ai_gen_id }} {
    margin-bottom: 1vw;
  }

  .ai-variant-label-{{ ai_gen_id }} {
    font-size: clamp(0.8rem, 1.8vw, 1.1rem);
    font-weight: 600;
    color: {{ block.settings.text_color }};
    margin-bottom: 0.8vw;
    display: block;
  }

  .ai-variant-options-{{ ai_gen_id }} {
    display: flex;
    flex-wrap: nowrap;
    gap: clamp(0.2rem, 0.5vw, 0.4rem);
    width: 100%;
    overflow-x: auto;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .ai-variant-options-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-variant-button-{{ ai_gen_id }} {
    flex: 1 1 auto;
    min-width: 0;
    white-space: nowrap;
    padding: clamp(0.4rem, 1vw, 0.7rem) clamp(0.5rem, 1.2vw, 0.8rem);
    border: 2px solid {{ block.settings.variant_border_color }};
    background-color: {{ block.settings.variant_bg_color }};
    color: {{ block.settings.variant_text_color }};
    border-radius: clamp(0.3rem, 0.6vw, 0.5rem);
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: clamp(0.65rem, 1.2vw, 0.9rem);
    font-weight: 500;
    text-align: center;
    overflow: hidden;
    text-overflow: ellipsis;
    box-sizing: border-box;
  }

  .ai-variant-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.variant_hover_bg_color }};
    color: {{ block.settings.variant_hover_text_color }};
    border-color: {{ block.settings.variant_hover_border_color }};
  }

  .ai-variant-button-{{ ai_gen_id }}.selected {
    background-color: {{ block.settings.variant_selected_bg_color }};
    color: {{ block.settings.variant_selected_text_color }};
    border-color: {{ block.settings.variant_selected_border_color }};
  }

  .ai-upload-button-{{ ai_gen_id }} {
    padding: clamp(0.6rem, 1.5vw, 1rem);
    background-color: {{ block.settings.upload_button_color }};
    color: {{ block.settings.upload_button_text_color }};
    border: none;
    border-radius: 0.8vw;
    cursor: pointer;
    font-size: clamp(0.8rem, 1.8vw, 1rem);
    font-weight: 600;
    transition: background-color 0.3s ease;
    width: 100%;
  }

  .ai-upload-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.upload_button_hover_color }};
  }

  .ai-cart-buttons-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1vw;
    margin-top: auto;
  }

  .ai-add-to-cart-{{ ai_gen_id }}, .ai-buy-now-{{ ai_gen_id }} {
    padding: clamp(0.8rem, 2vw, 1.2rem);
    border: none;
    border-radius: 0.8vw;
    cursor: pointer;
    font-size: clamp(0.8rem, 1.8vw, 1rem);
    font-weight: 600;
    transition: all 0.3s ease;
    text-align: center;
  }

  .ai-add-to-cart-{{ ai_gen_id }} {
    background-color: {{ block.settings.add_to_cart_color }};
    color: {{ block.settings.add_to_cart_text_color }};
  }

  .ai-add-to-cart-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.add_to_cart_hover_color }};
  }

  .ai-buy-now-{{ ai_gen_id }} {
    background-color: {{ block.settings.buy_now_color }};
    color: {{ block.settings.buy_now_text_color }};
  }

  .ai-buy-now-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.buy_now_hover_color }};
  }

  .ai-file-input-{{ ai_gen_id }} {
    display: none;
  }

  @media screen and (max-width: 768px) {
    .ai-custom-product-{{ ai_gen_id }} {
      flex-direction: column;
      gap: 4vw;
      padding: 4vw;
    }

    .ai-left-panel-{{ ai_gen_id }}, .ai-right-panel-{{ ai_gen_id }} {
      aspect-ratio: 1;
      width: 100%;
    }

    .ai-right-panel-{{ ai_gen_id }} {
      padding: 4vw;
      gap: 3vw;
    }

    .ai-variant-options-{{ ai_gen_id }} {
      gap: 1.5vw;
    }

    .ai-variant-button-{{ ai_gen_id }} {
      padding: 2.5vw 2vw;
      border-radius: 1.5vw;
      font-size: clamp(0.7rem, 3vw, 1rem);
    }

    .ai-cart-buttons-{{ ai_gen_id }} {
      gap: 3vw;
    }

    .ai-upload-button-{{ ai_gen_id }} {
      padding: 3vw;
      border-radius: 2vw;
    }

    .ai-add-to-cart-{{ ai_gen_id }}, .ai-buy-now-{{ ai_gen_id }} {
      padding: 3vw;
      border-radius: 2vw;
    }
  }

  @media screen and (max-width: 480px) {
    .ai-variant-options-{{ ai_gen_id }} {
      gap: 1vw;
    }

    .ai-variant-button-{{ ai_gen_id }} {
      font-size: clamp(0.65rem, 3.5vw, 0.9rem);
      padding: 3vw 1.5vw;
    }

    .ai-cart-buttons-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
    }
  }

  @media screen and (max-width: 360px) {
    .ai-variant-button-{{ ai_gen_id }} {
      font-size: clamp(0.6rem, 4vw, 0.8rem);
      padding: 3.5vw 1vw;
    }
  }
{% endstyle %}

<product-customizer-{{ ai_gen_id }}
  class="ai-custom-product-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
  data-product-id="{{ block.settings.product.id }}"
>
  <div class="ai-left-panel-{{ ai_gen_id }}">
    <div class="ai-layer-container-{{ ai_gen_id }}">
      {% if block.settings.base_shape_image %}
        <div class="ai-base-layer-{{ ai_gen_id }}">
          <img
            src="{{ block.settings.base_shape_image | image_url: width: 800 }}"
            alt="Base shape"
            loading="lazy"
          >
        </div>
      {% endif %}

      <div class="ai-user-layer-{{ ai_gen_id }}" id="ai-user-layer-{{ ai_gen_id }}">
      </div>

      {% if block.settings.overlay_image %}
        <div class="ai-overlay-layer-{{ ai_gen_id }}">
          <img
            src="{{ block.settings.overlay_image | image_url: width: 800 }}"
            alt="Overlay"
            loading="lazy"
          >
        </div>
      {% endif %}
    </div>
  </div>

  <div class="ai-right-panel-{{ ai_gen_id }}">
    {% if block.settings.product %}
      <h2 class="ai-product-title-{{ ai_gen_id }}">{{ block.settings.product.title }}</h2>
      
      <div class="ai-product-price-{{ ai_gen_id }}" id="ai-product-price-{{ ai_gen_id }}">
        {{ block.settings.product.price | money }}
      </div>

      {% if block.settings.product.has_only_default_variant == false %}
        <div class="ai-variants-{{ ai_gen_id }}">
          {% for option in block.settings.product.options_with_values %}
            <div class="ai-variant-group-{{ ai_gen_id }}">
              <label class="ai-variant-label-{{ ai_gen_id }}">{{ option.name }}:</label>
              <div class="ai-variant-options-{{ ai_gen_id }}">
                {% for value in option.values %}
                  <button
                    type="button"
                    class="ai-variant-button-{{ ai_gen_id }} {% if forloop.first %}selected{% endif %}"
                    data-option-position="{{ option.position }}"
                    data-option-value="{{ value }}"
                  >
                    {{ value }}
                  </button>
                {% endfor %}
              </div>
            </div>
          {% endfor %}
        </div>
      {% endif %}

      <button type="button" class="ai-upload-button-{{ ai_gen_id }}" onclick="document.getElementById('ai-file-input-{{ ai_gen_id }}').click()">
        Upload Your Image
      </button>
      <input
        type="file"
        id="ai-file-input-{{ ai_gen_id }}"
        class="ai-file-input-{{ ai_gen_id }}"
        accept="image/*"
      >

      <div class="ai-cart-buttons-{{ ai_gen_id }}">
        <button type="button" class="ai-add-to-cart-{{ ai_gen_id }}">
          Add to Cart
        </button>
        <button type="button" class="ai-buy-now-{{ ai_gen_id }}">
          Buy Now
        </button>
      </div>
    {% else %}
      <p style="color: #999; text-align: center; font-style: italic;">Please select a product to display</p>
    {% endif %}
  </div>
</product-customizer-{{ ai_gen_id }}>

<script>
  (function() {
    class ProductCustomizer{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.selectedVariant = null;
        this.uploadedImageData = null;
        this.productData = null;
      }

      connectedCallback() {
        this.productData = {{ block.settings.product | json }};
        if (this.productData) {
          this.selectedVariant = this.productData.variants[0];
          this.setupEventListeners();
          this.updatePrice();
        }
      }

      setupEventListeners() {
        const variantButtons = this.querySelectorAll('.ai-variant-button-{{ ai_gen_id }}');
        const fileInput = this.querySelector('#ai-file-input-{{ ai_gen_id }}');
        const addToCartBtn = this.querySelector('.ai-add-to-cart-{{ ai_gen_id }}');
        const buyNowBtn = this.querySelector('.ai-buy-now-{{ ai_gen_id }}');

        variantButtons.forEach(button => {
          button.addEventListener('click', (e) => {
            const optionPosition = e.target.dataset.optionPosition;
            const optionValue = e.target.dataset.optionValue;
            
            this.querySelectorAll(`[data-option-position="${optionPosition}"]`).forEach(btn => {
              btn.classList.remove('selected');
            });
            e.target.classList.add('selected');
            
            this.updateSelectedVariant();
          });
        });

        if (fileInput) {
          fileInput.addEventListener('change', (e) => {
            this.handleFileUpload(e);
          });
        }

        if (addToCartBtn) {
          addToCartBtn.addEventListener('click', () => {
            this.addToCart();
          });
        }

        if (buyNowBtn) {
          buyNowBtn.addEventListener('click', () => {
            this.buyNow();
          });
        }
      }

      updateSelectedVariant() {
        const selectedOptions = {};
        const selectedButtons = this.querySelectorAll('.ai-variant-button-{{ ai_gen_id }}.selected');
        
        selectedButtons.forEach(button => {
          const position = parseInt(button.dataset.optionPosition);
          const value = button.dataset.optionValue;
          selectedOptions[position] = value;
        });

        this.selectedVariant = this.productData.variants.find(variant => {
          return variant.options.every((option, index) => {
            return selectedOptions[index + 1] === option;
          });
        });

        if (this.selectedVariant) {
          this.updatePrice();
        }
      }

      updatePrice() {
        const priceElement = this.querySelector('#ai-product-price-{{ ai_gen_id }}');
        if (priceElement && this.selectedVariant) {
          const formatter = new Intl.NumberFormat('{{ shop.locale }}', {
            style: 'currency',
            currency: '{{ shop.currency }}'
          });
          priceElement.textContent = formatter.format(this.selectedVariant.price / 100);
        }
      }

      handleFileUpload(event) {
        const file = event.target.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = (e) => {
            this.uploadedImageData = e.target.result;
            this.displayUploadedImage();
          };
          reader.readAsDataURL(file);
        }
      }

      displayUploadedImage() {
        const userLayer = this.querySelector('#ai-user-layer-{{ ai_gen_id }}');
        if (userLayer && this.uploadedImageData) {
          userLayer.innerHTML = `<img src="${this.uploadedImageData}" alt="User uploaded image" style="width: 100%; height: 100%; object-fit: contain;">`;
        }
      }

      async addToCart() {
        if (!this.selectedVariant) return;

        const formData = {
          items: [{
            id: this.selectedVariant.id,
            quantity: 1,
            properties: {}
          }]
        };

        if (this.uploadedImageData) {
          formData.items[0].properties['Custom Image'] = this.uploadedImageData;
        }

        try {
          const response = await fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
          });

          if (response.ok) {
            window.location.href = '/cart';
          }
        } catch (error) {
          console.error('Error adding to cart:', error);
        }
      }

      async buyNow() {
        await this.addToCart();
        window.location.href = '/checkout';
      }
    }

    customElements.define('product-customizer-{{ ai_gen_id }}', ProductCustomizer{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Custom product",
  "settings": [
    {
      "type": "header",
      "content": "Product"
    },
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    },
    {
      "type": "header",
      "content": "Layer images"
    },
    {
      "type": "image_picker",
      "id": "base_shape_image",
      "label": "Base shape image"
    },
    {
      "type": "image_picker",
      "id": "overlay_image",
      "label": "Overlay image"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "left_panel_bg_color",
      "label": "Left panel background",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "right_panel_bg_color",
      "label": "Right panel background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Variant buttons"
    },
    {
      "type": "color",
      "id": "variant_bg_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "variant_text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "variant_border_color",
      "label": "Border color",
      "default": "#dddddd"
    },
    {
      "type": "color",
      "id": "variant_hover_bg_color",
      "label": "Hover background color",
      "default": "#f0f0f0"
    },
    {
      "type": "color",
      "id": "variant_hover_text_color",
      "label": "Hover text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "variant_hover_border_color",
      "label": "Hover border color",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "variant_selected_bg_color",
      "label": "Selected background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "variant_selected_text_color",
      "label": "Selected text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "variant_selected_border_color",
      "label": "Selected border color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Upload button"
    },
    {
      "type": "color",
      "id": "upload_button_color",
      "label": "Background color",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "upload_button_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "upload_button_hover_color",
      "label": "Hover background color",
      "default": "#0056b3"
    },
    {
      "type": "header",
      "content": "Cart buttons"
    },
    {
      "type": "color",
      "id": "add_to_cart_color",
      "label": "Add to cart background",
      "default": "#28a745"
    },
    {
      "type": "color",
      "id": "add_to_cart_text_color",
      "label": "Add to cart text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "add_to_cart_hover_color",
      "label": "Add to cart hover",
      "default": "#218838"
    },
    {
      "type": "color",
      "id": "buy_now_color",
      "label": "Buy now background",
      "default": "#dc3545"
    },
    {
      "type": "color",
      "id": "buy_now_text_color",
      "label": "Buy now text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "buy_now_hover_color",
      "label": "Buy now hover",
      "default": "#c82333"
    }
  ],
  "presets": [
    {
      "name": "Custom product"
    }
  ]
}
{% endschema %}