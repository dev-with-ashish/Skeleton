{% doc %}
  @prompt
    a product section where a product with all it information shown in the section for selected product like title, description, price, variants in button style, and also a 3d button in the thumbnail column showing a 1mm metal poster which can be rotated using drag or touch

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-product-showcase-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 40px;
    padding: 40px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    max-width: 100%;
  }

  .ai-product-showcase__media-{{ ai_gen_id }} {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .ai-product-showcase__3d-viewer-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    background: linear-gradient(135deg, #f5f5f5 0%, #e8e8e8 100%);
    border-radius: 12px;
    overflow: hidden;
    cursor: grab;
    user-select: none;
    touch-action: none;
  }

  .ai-product-showcase__3d-viewer-{{ ai_gen_id }}:active {
    cursor: grabbing;
  }

  .ai-product-showcase__poster-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 80%;
    height: 80%;
    transform-origin: center center;
    transform: translate(-50%, -50%) rotateY(0deg) rotateX(0deg);
    transition: transform 0.1s ease-out;
    background: linear-gradient(145deg, #ffffff 0%, #f8f8f8 50%, #e0e0e0 100%);
    border-radius: 4px;
    box-shadow:
      0 10px 30px rgba(0, 0, 0, 0.2),
      0 0 0 1px rgba(0, 0, 0, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.8);
  }

  .ai-product-showcase__poster-content-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    border-radius: 3px;
    position: relative;
  }

  .ai-product-showcase__poster-content-{{ ai_gen_id }}::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.1) 0%,
      transparent 50%,
      rgba(0, 0, 0, 0.05) 100%
    );
    border-radius: 3px;
  }

  .ai-product-showcase__3d-controls-{{ ai_gen_id }} {
    position: absolute;
    bottom: 15px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 8px 12px;
    border-radius: 20px;
    font-size: 12px;
    opacity: 0.8;
  }

  .ai-product-showcase__info-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  .ai-product-showcase__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0;
    line-height: 1.2;
  }

  .ai-product-showcase__price-{{ ai_gen_id }} {
    font-size: {{ block.settings.price_size }}px;
    color: {{ block.settings.price_color }};
    font-weight: 600;
  }

  .ai-product-showcase__description-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.description_size }}px;
    line-height: 1.6;
  }

  .ai-product-showcase__variants-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .ai-product-showcase__variant-group-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .ai-product-showcase__variant-label-{{ ai_gen_id }} {
    font-weight: 600;
    color: {{ block.settings.text_color }};
    font-size: 14px;
  }

  .ai-product-showcase__variant-options-{{ ai_gen_id }} {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .ai-product-showcase__variant-button-{{ ai_gen_id }} {
    padding: 10px 16px;
    border: 2px solid {{ block.settings.variant_border_color }};
    background: {{ block.settings.variant_bg_color }};
    color: {{ block.settings.variant_text_color }};
    border-radius: {{ block.settings.variant_border_radius }}px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 14px;}

  .ai-product-showcase__variant-button-{{ ai_gen_id }}:hover {
    background: {{ block.settings.variant_hover_bg_color }};
    border-color: {{ block.settings.variant_hover_border_color }};
  }

  .ai-product-showcase__variant-button-{{ ai_gen_id }}.selected {
    background: {{ block.settings.variant_selected_bg_color }};
    border-color: {{ block.settings.variant_selected_border_color }};color: {{ block.settings.variant_selected_text_color }};
  }

  .ai-product-showcase__add-to-cart-{{ ai_gen_id }} {
    padding: 16px 32px;
    background: {{ block.settings.button_bg_color }};
    color: {{ block.settings.button_text_color }};
    border: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s ease;margin-top: 8px;
  }

  .ai-product-showcase__add-to-cart-{{ ai_gen_id }}:hover {
    background: {{ block.settings.button_hover_bg_color }};
  }

  .ai-product-showcase__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: #666;
  }

  .ai-product-showcase__empty-state-{{ ai_gen_id }} svg {
    width: 100px;
    height: 100px;
    margin-bottom: 20px;
    opacity: 0.5;
  }

  @media screen and (max-width: 768px) {
    .ai-product-showcase-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 30px;
      padding: 20px;
    }

    .ai-product-showcase__title-{{ ai_gen_id }} {
      font-size: calc({{ block.settings.title_size }}px * 0.9);
    }

    .ai-product-showcase__variant-options-{{ ai_gen_id }} {
      gap: 6px;
    }

    .ai-product-showcase__variant-button-{{ ai_gen_id }} {
      padding: 8px 12px;
      font-size: 13px;
    }
  }
{% endstyle %}<product-showcase-{{ ai_gen_id }}
  class="ai-product-showcase-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.product %}
    {% assign product = block.settings.product %}<div class="ai-product-showcase__media-{{ ai_gen_id }}">
      <div class="ai-product-showcase__3d-viewer-{{ ai_gen_id }}" data-3d-viewer>
        <div class="ai-product-showcase__poster-{{ ai_gen_id }}" data-poster>
          <div 
            class="ai-product-showcase__poster-content-{{ ai_gen_id }}"
            style="background-image: url('{{ product.featured_image | image_url: width: 800 }}');"
          ></div>
        </div><div class="ai-product-showcase__3d-controls-{{ ai_gen_id }}">
          Drag to rotate
        </div>
      </div>
    </div>

    <div class="ai-product-showcase__info-{{ ai_gen_id }}">
      <h1 class="ai-product-showcase__title-{{ ai_gen_id }}">{{ product.title }}</h1>
      
      <div class="ai-product-showcase__price-{{ ai_gen_id }}">
        {{ product.price | money }}
        {% if product.compare_at_price > product.price %}
          <span style="text-decoration: line-through; opacity: 0.6; margin-left: 8px;">
            {{ product.compare_at_price | money }}
          </span>
        {% endif %}
      </div>

      {% if product.description != blank %}
        <div class="ai-product-showcase__description-{{ ai_gen_id }}">
          {{ product.description | truncate: 200 }}
        </div>
      {% endif %}

      {% if product.has_only_default_variant == false %}
        <div class="ai-product-showcase__variants-{{ ai_gen_id }}">
          {% for option in product.options_with_values %}
            <div class="ai-product-showcase__variant-group-{{ ai_gen_id }}">
              <div class="ai-product-showcase__variant-label-{{ ai_gen_id }}">{{ option.name }}</div>
              <div class="ai-product-showcase__variant-options-{{ ai_gen_id }}">
                {% for value in option.values %}
                  <button 
                    class="ai-product-showcase__variant-button-{{ ai_gen_id }}"
                    data-option-position="{{ option.position }}"
                    data-option-value="{{ value | escape }}"
                  >
                    {{ value }}
                  </button>
                {% endfor %}
              </div>
            </div>
          {% endfor %}
        </div>
      {% endif %}

      <button class="ai-product-showcase__add-to-cart-{{ ai_gen_id }}" data-add-to-cart>
        {{ block.settings.add_to_cart_text }}
      </button>
    </div>
  {% else %}
    <div class="ai-product-showcase__empty-state-{{ ai_gen_id }}">
      {{'product-apparel-1' | placeholder_svg_tag }}<p>Select a product to showcase</p>
    </div>
  {% endif %}
</product-showcase-{{ ai_gen_id }}>

<script>
  (function() {
    class ProductShowcase{{ai_gen_id}} extends HTMLElement {
      constructor() {
        super();
        this.rotationX = 0;
        this.rotationY = 0;
        this.isDragging = false;
        this.lastX = 0;
        this.lastY = 0;
        this.selectedVariant = null;
      }

      connectedCallback() {
        this.viewer3D = this.querySelector('[data-3d-viewer]');
        this.poster = this.querySelector('[data-poster]');
        this.variantButtons = this.querySelectorAll('.ai-product-showcase__variant-button-{{ ai_gen_id }}');
        this.addToCartButton = this.querySelector('[data-add-to-cart]');

        if (this.viewer3D && this.poster) {
          this.setup3DViewer();
        }

        if (this.variantButtons.length > 0) {
          this.setupVariantSelection();
        }

        if (this.addToCartButton) {
          this.setupAddToCart();
        }
      }

      setup3DViewer() {
        this.viewer3D.addEventListener('mousedown', this.startDrag.bind(this));
        this.viewer3D.addEventListener('mousemove', this.drag.bind(this));
        this.viewer3D.addEventListener('mouseup', this.endDrag.bind(this));
        this.viewer3D.addEventListener('mouseleave', this.endDrag.bind(this));

        this.viewer3D.addEventListener('touchstart', this.startDrag.bind(this));
        this.viewer3D.addEventListener('touchmove', this.drag.bind(this));
        this.viewer3D.addEventListener('touchend', this.endDrag.bind(this));
      }

      startDrag(e) {
        this.isDragging = true;
        const clientX = e.clientX || (e.touches && e.touches[0].clientX);
        const clientY = e.clientY || (e.touches && e.touches[0].clientY);
        this.lastX = clientX;
        this.lastY = clientY;
        e.preventDefault();
      }

      drag(e) {
        if (!this.isDragging) return;

        const clientX = e.clientX || (e.touches && e.touches[0].clientX);
        const clientY = e.clientY || (e.touches && e.touches[0].clientY);
        
        const deltaX = clientX - this.lastX;
        const deltaY = clientY - this.lastY;

        this.rotationY += deltaX * 0.5;
        this.rotationX -= deltaY * 0.5;

        this.rotationX = Math.max(-30, Math.min(30, this.rotationX));

        this.updatePosterRotation();

        this.lastX = clientX;
        this.lastY = clientY;
        e.preventDefault();
      }

      endDrag() {
        this.isDragging = false;
      }

      updatePosterRotation() {
        this.poster.style.transform = `translate(-50%, -50%) rotateY(${this.rotationY}deg) rotateX(${this.rotationX}deg)`;
      }

      setupVariantSelection() {
        this.variantButtons.forEach(button => {
          button.addEventListener('click', () => {
            const position = button.dataset.optionPosition;
            const value = button.dataset.optionValue;

            this.querySelectorAll(`[data-option-position="${position}"]`).forEach(btn => {
              btn.classList.remove('selected');
            });

            button.classList.add('selected');
            this.updateSelectedVariant();
          });
        });

        this.variantButtons[0]?.click();
      }

      updateSelectedVariant() {
        const selectedOptions = {};
        this.querySelectorAll('.ai-product-showcase__variant-button-{{ ai_gen_id }}.selected').forEach(button => {
          const position = button.dataset.optionPosition;
          const value = button.dataset.optionValue;
          selectedOptions[position] = value;
        });}

      setupAddToCart() {
        this.addToCartButton.addEventListener('click', () => {
          const productId = {{ block.settings.product.id | default: 'null' }};
          if (productId) {
            window.location.href = `/products/{{ block.settings.product.handle }}`;
          }
        });
      }
    }

    customElements.define('product-showcase-{{ ai_gen_id }}', ProductShowcase{{ai_gen_id}});
  })();
</script>

{% schema %}
{
  "name": "Product showcase",
  "settings": [
    {
      "type": "header",
      "content": "Product"
    },
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Add to cart button text",
      "default": "Add to Cart"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 32
    },
    {
      "type": "range",
      "id": "price_size",
      "min": 14,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Price size",
      "default": 24
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Variant buttons"
    },
    {
      "type": "color",
      "id": "variant_bg_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "variant_text_color",
      "label": "Text",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "variant_border_color",
      "label": "Border",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "variant_hover_bg_color",
      "label": "Hover background",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "variant_hover_border_color",
      "label": "Hover border",
      "default": "#999999"
    },
    {
      "type": "color",
      "id": "variant_selected_bg_color",
      "label": "Selected background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "variant_selected_text_color",
      "label": "Selected text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "variant_selected_border_color",
      "label": "Selected border",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "variant_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 6
    },
    {
      "type": "header",
      "content": "Add to cart button"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Background",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_bg_color",
      "label": "Hover background",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Section border radius",
      "default": 12
    }
  ],
  "presets": [
    {
      "name": "Product showcase"
    }
  ]
}
{% endschema %}