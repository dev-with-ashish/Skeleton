{% doc %}
  @prompt
    a name plate section where user can see their name on the name plate (product first image will be used as name plate image layer) by typing using a text box in the left this, add option to select product in the customizer, cursive fonts not looks exact, font is working now, show font option with all atleast 100 nameplate used fonts in the customizer not to the user, most of the fonts under one category seems similar, all fonts of one category are same do not change the look, move font selection to admin theme customizer and should have google fonts, replace all fonts with all adobe fonts 
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-nameplate-container-{{ ai_gen_id }} {
    display: flex;
    gap: 40px;
    max-width: 1200px;
    margin: 0 auto;
    padding: 40px 20px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-nameplate-controls-{{ ai_gen_id }} {
    flex: 1;
    min-width: 300px;
  }

  .ai-nameplate-preview-{{ ai_gen_id }} {
    flex: 1;
    position: relative;
  }

  .ai-nameplate-input-group-{{ ai_gen_id }} {
    margin-bottom: 24px;
  }

  .ai-nameplate-label-{{ ai_gen_id }} {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    color: {{ block.settings.text_color }};
    font-size: 16px;
  }

  .ai-nameplate-input-{{ ai_gen_id }} {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid {{ block.settings.input_border_color }};
    border-radius: 8px;
    font-size: 16px;
    background-color: {{ block.settings.input_background_color }};
    color: {{ block.settings.input_text_color }};
  }

  .ai-nameplate-input-{{ ai_gen_id }}:focus {
    outline: none;
    border-color: {{ block.settings.input_focus_color }};
    box-shadow: 0 0 0 3px {{ block.settings.input_focus_color }}33;
  }

  .ai-nameplate-image-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .ai-nameplate-image-{{ ai_gen_id }} {
    width: 100%;
    height: auto;
    display: block;
  }

  .ai-nameplate-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 400px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-nameplate-image-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
    opacity: 0.3;
  }

  .ai-nameplate-text-overlay-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-family: {{ block.settings.nameplate_font.family }}, {{ block.settings.nameplate_font.fallback_families }};
    font-weight: {{ block.settings.nameplate_font.weight }};
    font-style: {{ block.settings.nameplate_font.style }};
    font-size: {{ block.settings.font_size }}px;
    color: {{ block.settings.font_color }};
    text-align: center;
    white-space: nowrap;
    text-shadow: {{ block.settings.text_shadow_x }}px {{ block.settings.text_shadow_y }}px {{ block.settings.text_shadow_blur }}px {{ block.settings.text_shadow_color }};
    letter-spacing: {{ block.settings.letter_spacing }}px;
    line-height: 1.2;
    pointer-events: none;
    z-index: 2;
  }

  .ai-nameplate-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 12px 20px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 6px;
    font-size: 14px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  @media screen and (max-width: 768px) {
    .ai-nameplate-container-{{ ai_gen_id }} {
      flex-direction: column;
      gap: 24px;
      padding: 20px;
    }

    .ai-nameplate-text-overlay-{{ ai_gen_id }} {
      font-size: calc({{ block.settings.font_size }}px * 0.8);
    }
  }
{% endstyle %}

<nameplate-customizer-{{ ai_gen_id }}
  class="ai-nameplate-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-nameplate-controls-{{ ai_gen_id }}">
    <div class="ai-nameplate-input-group-{{ ai_gen_id }}">
      <label for="nameplate-text-{{ ai_gen_id }}" class="ai-nameplate-label-{{ ai_gen_id }}">
        {{ block.settings.input_label }}
      </label>
      <input
        type="text"
        id="nameplate-text-{{ ai_gen_id }}"
        class="ai-nameplate-input-{{ ai_gen_id }}"
        placeholder="{{ block.settings.input_placeholder }}"
        maxlength="50"
      >
    </div>
  </div>

  <div class="ai-nameplate-preview-{{ ai_gen_id }}">
    <div class="ai-nameplate-image-container-{{ ai_gen_id }}">
      {% if block.settings.selected_product and block.settings.selected_product.featured_image %}
        <img
          src="{{ block.settings.selected_product.featured_image | image_url: width: 800 }}"
          alt="{{ block.settings.selected_product.featured_image.alt | escape }}"
          class="ai-nameplate-image-{{ ai_gen_id }}"
          width="{{ block.settings.selected_product.featured_image.width }}"
          height="{{ block.settings.selected_product.featured_image.height }}"
          loading="lazy"
        >
      {% else %}
        <div class="ai-nameplate-image-placeholder-{{ ai_gen_id }}">
          {{ 'product-1' | placeholder_svg_tag }}
          <div class="ai-nameplate-empty-state-{{ ai_gen_id }}">
            Select a product to preview
          </div>
        </div>
      {% endif %}
      
      <div class="ai-nameplate-text-overlay-{{ ai_gen_id }}" id="nameplate-overlay-{{ ai_gen_id }}">
        {{ block.settings.preview_text }}
      </div>
    </div>
  </div>
</nameplate-customizer-{{ ai_gen_id }}>

<script>
  (function() {
    class NameplateCustomizer{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.input = this.querySelector('#nameplate-text-{{ ai_gen_id }}');
        this.overlay = this.querySelector('#nameplate-overlay-{{ ai_gen_id }}');
        
        if (this.input && this.overlay) {
          this.input.addEventListener('input', (e) => {
            const text = e.target.value.trim();
            this.overlay.textContent = text || '{{ block.settings.preview_text }}';
          });
        }
      }
    }

    customElements.define('nameplate-customizer-{{ ai_gen_id }}', NameplateCustomizer{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Name plate customizer",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Product selection"
    },
    {
      "type": "product",
      "id": "selected_product",
      "label": "Select product"
    },
    {
      "type": "header",
      "content": "Text settings"
    },
    {
      "type": "text",
      "id": "input_label",
      "label": "Input label",
      "default": "Enter your name"
    },
    {
      "type": "text",
      "id": "input_placeholder",
      "label": "Input placeholder",
      "default": "Type your name here..."
    },
    {
      "type": "text",
      "id": "preview_text",
      "label": "Default preview text",
      "default": "Your Name"
    },
    {
      "type": "font_picker",
      "id": "nameplate_font",
      "label": "Nameplate font",
      "default": "helvetica_n4"
    },
    {
      "type": "range",
      "id": "font_size",
      "min": 20,
      "max": 120,
      "step": 2,
      "unit": "px",
      "label": "Font size",
      "default": 48
    },
    {
      "type": "color",
      "id": "font_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "letter_spacing",
      "min": -5,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Letter spacing",
      "default": 2
    },
    {
      "type": "header",
      "content": "Text shadow"
    },
    {
      "type": "range",
      "id": "text_shadow_x",
      "min": -10,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Shadow X offset",
      "default": 2
    },
    {
      "type": "range",
      "id": "text_shadow_y",
      "min": -10,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Shadow Y offset",
      "default": 2
    },
    {
      "type": "range",
      "id": "text_shadow_blur",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Shadow blur",
      "default": 4
    },
    {
      "type": "color",
      "id": "text_shadow_color",
      "label": "Shadow color",
      "default": "#00000050"
    },
    {
      "type": "header",
      "content": "Layout colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Label text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "input_background_color",
      "label": "Input background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "input_text_color",
      "label": "Input text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "input_border_color",
      "label": "Input border color",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "input_focus_color",
      "label": "Input focus color",
      "default": "#007acc"
    }
  ],
  "presets": [
    {
      "name": "Name plate customizer"
    }
  ]
}
{% endschema %}