{% doc %}
  @prompt
    a section to display the 3d box which can be rotated having orbit control feature, a real 3d box, nox 3d box is showing, now make it a 2:3 in ratio, make it a poster 1 mm poster of 2:3 in ratio, why there is a split in the poster seems like poster is made from four poster remove the extra lines and split from the scene just a 1mm metal poster, there is still lines on top and left or right and in the centre of the poster remove all that extra line , let the front image of the poster to be the last imge of a selected product or last image of the product if it is on a product page, in the left of the container show the thumbnail column to display the product images expect the last image with option to display image in the container when image is clicked from the thumbnail column and this 3d poster as it is right now when 3d button is clicked from the thumbnail column and in the right side of the container show the product information keep the container and poster as it is when 3d button is clicked from the thumbnail column , in the left of the container show the thumbnail column to display the product images expect the last image, the thumbnail and the info should be shown outside the main container, main container should always be in square shape, poster should be inside the squared container in the center and responsive to the container, irrespective of the device container should always in square and the poster fixed in the center of the container responsive in size to the container maintaing 2:3 ratio, evrything all right just fix why product images except the last image not showing on in the thumbnail column
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% liquid
  if block.settings.selected_product != blank
    assign poster_product = block.settings.selected_product
  elsif product != blank
    assign poster_product = product
  else
    assign poster_product = null
  endif

  if poster_product != null and poster_product.images.size > 0
    assign front_poster_image = poster_product.images.last
    assign thumbnail_images = poster_product.images
  else
    assign front_poster_image = null
    assign thumbnail_images = null
  endif
%}

{% style %}
  .ai-product-viewer-wrapper-{{ ai_gen_id }} {
    width: 100%;
    display: flex;
    gap: 20px;
    align-items: flex-start;
  }

  .ai-thumbnail-column-{{ ai_gen_id }} {
    width: 120px;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    gap: 10px;
    background: {{ block.settings.thumbnail_bg_color }};
    padding: 15px;
    border-radius: {{ block.settings.border_radius }}px;
  }

  .ai-thumbnail-item-{{ ai_gen_id }} {
    width: 90px;
    height: 90px;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: all 0.3s ease;
    position: relative;
  }

  .ai-thumbnail-item-{{ ai_gen_id }}:hover {
    border-color: {{ block.settings.thumbnail_hover_color }};
    transform: scale(1.05);
  }

  .ai-thumbnail-item-{{ ai_gen_id }}.active {
    border-color: {{ block.settings.thumbnail_active_color }};
  }

  .ai-thumbnail-item-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-3d-button-{{ ai_gen_id }} {
    width: 90px;
    height: 40px;
    background: {{ block.settings.button_3d_color }};
    color: {{ block.settings.button_3d_text_color }};
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 12px;
    font-weight: bold;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
  }

  .ai-3d-button-{{ ai_gen_id }}:hover {
    background: {{ block.settings.button_3d_hover_color }};
    transform: scale(1.05);
  }

  .ai-3d-button-{{ ai_gen_id }}.active {
    background: {{ block.settings.button_3d_active_color }};
  }

  .ai-main-container-{{ ai_gen_id }} {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: {{ block.settings.container_size }}px;
    height: {{ block.settings.container_size }}px;
    aspect-ratio: 1 / 1;
    background: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    padding: 20px;
    box-sizing: border-box;
    overflow: hidden;
  }

  .ai-2d-image-view-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    border-radius: 8px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .ai-2d-image-view-{{ ai_gen_id }} img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    border-radius: 8px;
  }

  .ai-3d-poster-scene-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    perspective: 1000px;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .ai-3d-poster-{{ ai_gen_id }} {
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.1s ease-out;
    cursor: grab;
    width: var(--poster-display-width);
    height: var(--poster-display-height);
  }

  .ai-3d-poster-{{ ai_gen_id }}:active {
    cursor: grabbing;
  }

  .ai-3d-poster-face-{{ ai_gen_id }} {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: calc(var(--poster-display-width) * 0.06);
    font-weight: bold;
    color: {{ block.settings.text_color }};
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .ai-3d-poster-front-{{ ai_gen_id }} {
    width: var(--poster-display-width);
    height: var(--poster-display-height);
    background: {{ block.settings.front_color }};
    transform: translateZ(0.5px);
  }

  .ai-3d-poster-back-{{ ai_gen_id }} {
    width: var(--poster-display-width);
    height: var(--poster-display-height);
    background: {{ block.settings.back_color }};
    transform: translateZ(-0.5px) rotateY(180deg);
  }

  .ai-3d-poster-edge-{{ ai_gen_id }} {
    background: {{ block.settings.edge_color }};
  }

  .ai-3d-poster-right-{{ ai_gen_id }} {
    width: 1px;
    height: var(--poster-display-height);
    right: 0;
    transform: rotateY(90deg) translateZ(0px);
    transform-origin: right center;
  }

  .ai-3d-poster-left-{{ ai_gen_id }} {
    width: 1px;
    height: var(--poster-display-height);
    left: 0;
    transform: rotateY(-90deg) translateZ(0px);
    transform-origin: left center;
  }

  .ai-3d-poster-top-{{ ai_gen_id }} {
    width: var(--poster-display-width);
    height: 1px;
    top: 0;
    transform: rotateX(90deg) translateZ(0px);
    transform-origin: center top;
  }

  .ai-3d-poster-bottom-{{ ai_gen_id }} {
    width: var(--poster-display-width);
    height: 1px;
    bottom: 0;
    transform: rotateX(-90deg) translateZ(0px);
    transform-origin: center bottom;
  }

  .ai-product-info-{{ ai_gen_id }} {
    width: 300px;
    flex-shrink: 0;
    padding: 20px;
    background: {{ block.settings.info_bg_color }};
    border-radius: {{ block.settings.border_radius }}px;
    color: {{ block.settings.info_text_color }};
  }

  .ai-product-title-{{ ai_gen_id }} {
    font-size: 24px;
    font-weight: bold;
    margin: 0 0 15px;
    color: {{ block.settings.info_title_color }};
  }

  .ai-product-price-{{ ai_gen_id }} {
    font-size: 20px;
    font-weight: 600;
    margin: 0 0 15px;
    color: {{ block.settings.info_price_color }};
  }

  .ai-product-description-{{ ai_gen_id }} {
    font-size: 14px;
    line-height: 1.5;
    margin: 0 0 20px;
    max-height: 150px;
    overflow-y: auto;
  }

  .ai-product-specs-{{ ai_gen_id }} {
    background: rgba(0, 0, 0, 0.05);
    padding: 15px;
    border-radius: 6px;
    font-size: 12px;
    margin-bottom: 15px;
  }

  .ai-product-specs-title-{{ ai_gen_id }} {
    font-weight: bold;
    margin-bottom: 8px;
  }

  .ai-3d-controls-{{ ai_gen_id }} {
    position: absolute;
    top: 10px;
    right: 10px;
    display: flex;
    gap: 8px;
    z-index: 10;
  }

  .ai-3d-control-btn-{{ ai_gen_id }} {
    padding: 6px 10px;
    background: {{ block.settings.control_bg_color }};
    color: {{ block.settings.control_text_color }};
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 11px;
  }

  .ai-3d-control-btn-{{ ai_gen_id }}:hover {
    opacity: 0.8;
  }

  .ai-placeholder-container-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 15px;
    color: #666;
    text-align: center;
  }

  .ai-placeholder-container-{{ ai_gen_id }} svg {
    width: 80px;
    height: 80px;
    opacity: 0.5;
  }

  .ai-hidden-{{ ai_gen_id }} {
    display: none !important;
  }

  @media screen and (max-width: 768px) {
    .ai-product-viewer-wrapper-{{ ai_gen_id }} {
      flex-direction: column;
      gap: 15px;
    }

    .ai-thumbnail-column-{{ ai_gen_id }} {
      width: 100%;
      flex-direction: row;
      overflow-x: auto;
      padding: 15px;
    }

    .ai-thumbnail-item-{{ ai_gen_id }},
    .ai-3d-button-{{ ai_gen_id }} {
      flex-shrink: 0;
    }

    .ai-product-info-{{ ai_gen_id }} {
      width: 100%;
    }

    .ai-main-container-{{ ai_gen_id }} {
      width: min(90vw, {{ block.settings.container_size }}px);
      height: min(90vw, {{ block.settings.container_size }}px);
      aspect-ratio: 1 / 1;
    }
  }

  @media screen and (max-width: 480px) {
    .ai-main-container-{{ ai_gen_id }} {
      width: min(85vw, {{ block.settings.container_size | times: 0.7 }}px);
      height: min(85vw, {{ block.settings.container_size | times: 0.7 }}px);
      aspect-ratio: 1 / 1;
      padding: 15px;
    }
  }
{% endstyle %}

<product-viewer-{{ ai_gen_id }}
  class="ai-product-viewer-wrapper-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-thumbnail-column-{{ ai_gen_id }}">
    {% if poster_product and thumbnail_images.size > 1 %}
      {% for image in thumbnail_images %}
        {% unless forloop.last %}
          <div 
            class="ai-thumbnail-item-{{ ai_gen_id }}" 
            data-image-id="{{ image.id }}"
            data-image-url="{{ image | image_url: width: 800 }}"
            data-image-alt="{{ image.alt | default: poster_product.title | escape }}"
          >
            <img
              src="{{ image | image_url: width: 100 }}"
              alt="{{ image.alt | default: poster_product.title | escape }}"
              loading="lazy"
            >
          </div>
        {% endunless %}
      {% endfor %}
    {% endif %}
    
    <button class="ai-3d-button-{{ ai_gen_id }} active" id="ai-3d-toggle-{{ ai_gen_id }}">
      <span>🎯</span> 3D
    </button>
  </div>

  <div class="ai-main-container-{{ ai_gen_id }}">
    <div class="ai-2d-image-view-{{ ai_gen_id }} ai-hidden-{{ ai_gen_id }}" id="ai-2d-view-{{ ai_gen_id }}">
      <img id="ai-main-image-{{ ai_gen_id }}" src="" alt="">
    </div>

    <div class="ai-3d-poster-scene-{{ ai_gen_id }}" id="ai-3d-view-{{ ai_gen_id }}">
      <div class="ai-3d-poster-{{ ai_gen_id }}" id="ai-3d-poster-{{ ai_gen_id }}">
        <div class="ai-3d-poster-face-{{ ai_gen_id }} ai-3d-poster-front-{{ ai_gen_id }}">
          {% if front_poster_image %}
            <img
              src="{{ front_poster_image | image_url: width: 600 }}"
              alt="{{ front_poster_image.alt | default: poster_product.title | escape }}"
              loading="lazy"
              style="width: 100%; height: 100%; object-fit: cover;"
            >
          {% elsif block.settings.front_image %}
            <img
              src="{{ block.settings.front_image | image_url: width: 600 }}"
              alt="{{ block.settings.front_image.alt | escape }}"
              loading="lazy"
              style="width: 100%; height: 100%; object-fit: cover;"
            >
          {% elsif block.settings.front_text != blank %}
            {{ block.settings.front_text }}
          {% else %}
            <div class="ai-placeholder-container-{{ ai_gen_id }}">
              {{ 'image' | placeholder_svg_tag }}
              <div>
                {% if template.name == 'product' %}
                  Add images to this product
                {% else %}
                  Select a product or add a front image
                {% endif %}
              </div>
            </div>
          {% endif %}
        </div>
        <div class="ai-3d-poster-face-{{ ai_gen_id }} ai-3d-poster-back-{{ ai_gen_id }}">
          {% if block.settings.back_image %}
            <img
              src="{{ block.settings.back_image | image_url: width: 600 }}"
              alt="{{ block.settings.back_image.alt | escape }}"
              loading="lazy"
              style="width: 100%; height: 100%; object-fit: cover;"
            >
          {% elsif block.settings.back_text != blank %}
            {{ block.settings.back_text }}
          {% else %}
            <div class="ai-placeholder-container-{{ ai_gen_id }}">
              {{ 'image' | placeholder_svg_tag }}
              <div>Add a back image or text</div>
            </div>
          {% endif %}
        </div>
        <div class="ai-3d-poster-face-{{ ai_gen_id }} ai-3d-poster-edge-{{ ai_gen_id }} ai-3d-poster-right-{{ ai_gen_id }}"></div>
        <div class="ai-3d-poster-face-{{ ai_gen_id }} ai-3d-poster-edge-{{ ai_gen_id }} ai-3d-poster-left-{{ ai_gen_id }}"></div>
        <div class="ai-3d-poster-face-{{ ai_gen_id }} ai-3d-poster-edge-{{ ai_gen_id }} ai-3d-poster-top-{{ ai_gen_id }}"></div>
        <div class="ai-3d-poster-face-{{ ai_gen_id }} ai-3d-poster-edge-{{ ai_gen_id }} ai-3d-poster-bottom-{{ ai_gen_id }}"></div>
      </div>

      <div class="ai-3d-controls-{{ ai_gen_id }}">
        <button class="ai-3d-control-btn-{{ ai_gen_id }}" id="ai-reset-{{ ai_gen_id }}">Reset</button>
        <button class="ai-3d-control-btn-{{ ai_gen_id }}" id="ai-auto-rotate-{{ ai_gen_id }}">Auto</button>
      </div>
    </div>
  </div>

  <div class="ai-product-info-{{ ai_gen_id }}">
    {% if poster_product %}
      <h2 class="ai-product-title-{{ ai_gen_id }}">{{ poster_product.title }}</h2>
      <div class="ai-product-price-{{ ai_gen_id }}">{{ poster_product.price | money }}</div>
      
      {% if poster_product.description != blank %}
        <div class="ai-product-description-{{ ai_gen_id }}">
          {{ poster_product.description | strip_html | truncate: 200 }}
        </div>
      {% endif %}

      <div class="ai-product-specs-{{ ai_gen_id }}">
        <div class="ai-product-specs-title-{{ ai_gen_id }}">Metal Poster Specifications</div>
        <div>• Size: 2:3 ratio poster</div>
        <div>• Thickness: 1mm premium metal</div>
        <div>• Finish: High-quality print</div>
        <div>• Mounting: Magnetic system included</div>
      </div>

      {% if poster_product.tags.size > 0 %}
        <div style="margin-top: 15px;">
          <strong>Tags:</strong>
          {% for tag in poster_product.tags limit: 5 %}
            <span style="background: rgba(0,0,0,0.1); padding: 2px 6px; border-radius: 3px; font-size: 11px; margin-right: 5px;">{{ tag }}</span>
          {% endfor %}
        </div>
      {% endif %}
    {% else %}
      <div class="ai-placeholder-container-{{ ai_gen_id }}">
        <h3>Product Information</h3>
        <p>Select a product to display its information here, or add this block to a product page.</p>
      </div>
    {% endif %}
  </div>
</product-viewer-{{ ai_gen_id }}>

<script>
  (function() {
    class ProductViewer{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.rotationX = -10;
        this.rotationY = 25;
        this.scale = 1;
        this.isDragging = false;
        this.lastMouseX = 0;
        this.lastMouseY = 0;
        this.autoRotate = false;
        this.animationId = null;
        this.is3DMode = true;
      }

      connectedCallback() {
        this.poster = this.querySelector('#ai-3d-poster-{{ ai_gen_id }}');
        this.resetBtn = this.querySelector('#ai-reset-{{ ai_gen_id }}');
        this.autoRotateBtn = this.querySelector('#ai-auto-rotate-{{ ai_gen_id }}');
        this.toggleBtn = this.querySelector('#ai-3d-toggle-{{ ai_gen_id }}');
        this.view2D = this.querySelector('#ai-2d-view-{{ ai_gen_id }}');
        this.view3D = this.querySelector('#ai-3d-view-{{ ai_gen_id }}');
        this.mainImage = this.querySelector('#ai-main-image-{{ ai_gen_id }}');
        this.thumbnails = this.querySelectorAll('.ai-thumbnail-item-{{ ai_gen_id }}');
        this.mainContainer = this.querySelector('.ai-main-container-{{ ai_gen_id }}');

        this.setupEventListeners();
        this.calculatePosterSize();
        this.updateTransform();
        
        window.addEventListener('resize', this.calculatePosterSize.bind(this));
      }

      calculatePosterSize() {
        if (!this.mainContainer) return;
        
        const containerRect = this.mainContainer.getBoundingClientRect();
        const availableWidth = containerRect.width - 40;
        const availableHeight = containerRect.height - 40;
        
        const posterAspectRatio = 2 / 3;
        
        let posterWidth, posterHeight;
        
        if (availableWidth / availableHeight > posterAspectRatio) {
          posterHeight = availableHeight * 0.85;
          posterWidth = posterHeight * posterAspectRatio;
        } else {
          posterWidth = availableWidth * 0.85;
          posterHeight = posterWidth / posterAspectRatio;
        }
        
        this.poster.style.setProperty('--poster-display-width', posterWidth + 'px');
        this.poster.style.setProperty('--poster-display-height', posterHeight + 'px');
      }

      setupEventListeners() {
        this.mainContainer.addEventListener('mousedown', this.handleMouseDown.bind(this));
        this.mainContainer.addEventListener('mousemove', this.handleMouseMove.bind(this));
        this.mainContainer.addEventListener('mouseup', this.handleMouseUp.bind(this));
        this.mainContainer.addEventListener('mouseleave', this.handleMouseUp.bind(this));
        this.mainContainer.addEventListener('wheel', this.handleWheel.bind(this));

        this.mainContainer.addEventListener('touchstart', this.handleTouchStart.bind(this));
        this.mainContainer.addEventListener('touchmove', this.handleTouchMove.bind(this));
        this.mainContainer.addEventListener('touchend', this.handleTouchEnd.bind(this));

        if (this.resetBtn) this.resetBtn.addEventListener('click', this.reset.bind(this));
        if (this.autoRotateBtn) this.autoRotateBtn.addEventListener('click', this.toggleAutoRotate.bind(this));
        if (this.toggleBtn) this.toggleBtn.addEventListener('click', this.toggle3DMode.bind(this));

        this.thumbnails.forEach(thumb => {
          thumb.addEventListener('click', this.handleThumbnailClick.bind(this));
        });
      }

      handleThumbnailClick(e) {
        const thumbnail = e.currentTarget;
        const imageUrl = thumbnail.dataset.imageUrl;
        const imageAlt = thumbnail.dataset.imageAlt;

        this.thumbnails.forEach(t => t.classList.remove('active'));
        thumbnail.classList.add('active');

        if (this.mainImage) {
          this.mainImage.src = imageUrl;
          this.mainImage.alt = imageAlt;
        }

        this.switch2DMode();
      }

      toggle3DMode() {
        if (this.is3DMode) {
          this.switch2DMode();
        } else {
          this.switch3DMode();
        }
      }

      switch3DMode() {
        this.is3DMode = true;
        this.view3D.classList.remove('ai-hidden-{{ ai_gen_id }}');
        this.view2D.classList.add('ai-hidden-{{ ai_gen_id }}');
        this.toggleBtn.classList.add('active');
        this.toggleBtn.innerHTML = '<span>🎯</span> 3D';
        
        this.thumbnails.forEach(t => t.classList.remove('active'));
      }

      switch2DMode() {
        this.is3DMode = false;
        this.view3D.classList.add('ai-hidden-{{ ai_gen_id }}');
        this.view2D.classList.remove('ai-hidden-{{ ai_gen_id }}');
        this.toggleBtn.classList.remove('active');
        this.toggleBtn.innerHTML = '<span>📷</span> 2D';
      }

      handleMouseDown(e) {
        if (!this.is3DMode) return;
        if (e.target.closest('.ai-3d-controls-{{ ai_gen_id }}')) return;
        
        this.isDragging = true;
        this.lastMouseX = e.clientX;
        this.lastMouseY = e.clientY;
        e.preventDefault();
      }

      handleMouseMove(e) {
        if (!this.isDragging || !this.is3DMode) return;

        const deltaX = e.clientX - this.lastMouseX;
        const deltaY = e.clientY - this.lastMouseY;

        this.rotationY += deltaX * 0.5;
        this.rotationX -= deltaY * 0.5;

        this.rotationX = Math.max(-90, Math.min(90, this.rotationX));

        this.lastMouseX = e.clientX;
        this.lastMouseY = e.clientY;

        this.updateTransform();
        e.preventDefault();
      }

      handleMouseUp() {
        this.isDragging = false;
      }

      handleTouchStart(e) {
        if (!this.is3DMode) return;
        if (e.target.closest('.ai-3d-controls-{{ ai_gen_id }}')) return;
        
        if (e.touches.length === 1) {
          this.isDragging = true;
          this.lastMouseX = e.touches[0].clientX;
          this.lastMouseY = e.touches[0].clientY;
          e.preventDefault();
        }
      }

      handleTouchMove(e) {
        if (!this.isDragging || e.touches.length !== 1 || !this.is3DMode) return;

        const deltaX = e.touches[0].clientX - this.lastMouseX;
        const deltaY = e.touches[0].clientY - this.lastMouseY;

        this.rotationY += deltaX * 0.5;
        this.rotationX -= deltaY * 0.5;

        this.rotationX = Math.max(-90, Math.min(90, this.rotationX));

        this.lastMouseX = e.touches[0].clientX;
        this.lastMouseY = e.touches[0].clientY;

        this.updateTransform();
        e.preventDefault();
      }

      handleTouchEnd() {
        this.isDragging = false;
      }

      handleWheel(e) {
        if (!this.is3DMode) return;
        e.preventDefault();
        const delta = e.deltaY > 0 ? 0.9 : 1.1;
        this.scale = Math.max(0.3, Math.min(3, this.scale * delta));
        this.updateTransform();
      }

      updateTransform() {
        if (this.poster && this.is3DMode) {
          this.poster.style.transform = `
            rotateX(${this.rotationX}deg) 
            rotateY(${this.rotationY}deg) 
            scale(${this.scale})
          `;
        }
      }

      reset() {
        this.rotationX = -10;
        this.rotationY = 25;
        this.scale = 1;
        this.updateTransform();
      }

      toggleAutoRotate() {
        this.autoRotate = !this.autoRotate;
        this.autoRotateBtn.textContent = this.autoRotate ? 'Stop' : 'Auto';
        
        if (this.autoRotate) {
          this.startAutoRotation();
        } else {
          this.stopAutoRotation();
        }
      }

      startAutoRotation() {
        const animate = () => {
          if (this.autoRotate && !this.isDragging && this.is3DMode) {
            this.rotationY += 0.3;
            this.updateTransform();
          }
          if (this.autoRotate) {
            this.animationId = requestAnimationFrame(animate);
          }
        };
        animate();
      }

      stopAutoRotation() {
        if (this.animationId) {
          cancelAnimationFrame(this.animationId);
          this.animationId = null;
        }
      }

      disconnectedCallback() {
        this.stopAutoRotation();
        window.removeEventListener('resize', this.calculatePosterSize.bind(this));
      }
    }

    customElements.define('product-viewer-{{ ai_gen_id }}', ProductViewer{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "3D product viewer",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Product selection"
    },
    {
      "type": "product",
      "id": "selected_product",
      "label": "Product"
    },
    {
      "type": "paragraph",
      "content": "The last image from the selected product will be used as the 3D poster front. All other images (except the last) will appear as thumbnails. If no product is selected and this block is on a product page, the current product will be used."
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "container_size",
      "min": 400,
      "max": 800,
      "step": 20,
      "unit": "px",
      "label": "Container size (square)",
      "default": 600
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Main container background",
      "default": "#f8f8f8"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 12
    },
    {
      "type": "header",
      "content": "Thumbnail column"
    },
    {
      "type": "color",
      "id": "thumbnail_bg_color",
      "label": "Thumbnail column background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "thumbnail_hover_color",
      "label": "Thumbnail hover border",
      "default": "#007acc"
    },
    {
      "type": "color",
      "id": "thumbnail_active_color",
      "label": "Thumbnail active border",
      "default": "#0066cc"
    },
    {
      "type": "header",
      "content": "3D button"
    },
    {
      "type": "color",
      "id": "button_3d_color",
      "label": "3D button color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_3d_text_color",
      "label": "3D button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_3d_hover_color",
      "label": "3D button hover",
      "default": "#555555"
    },
    {
      "type": "color",
      "id": "button_3d_active_color",
      "label": "3D button active",
      "default": "#007acc"
    },
    {
      "type": "header",
      "content": "3D poster styling"
    },
    {
      "type": "image_picker",
      "id": "front_image",
      "label": "Fallback front image"
    },
    {
      "type": "text",
      "id": "front_text",
      "label": "Fallback front text",
      "default": "METAL POSTER"
    },
    {
      "type": "color",
      "id": "front_color",
      "label": "Front background",
      "default": "#e8e8e8"
    },
    {
      "type": "image_picker",
      "id": "back_image",
      "label": "Back image"
    },
    {
      "type": "text",
      "id": "back_text",
      "label": "Back text",
      "default": "PREMIUM QUALITY"
    },
    {
      "type": "color",
      "id": "back_color",
      "label": "Back background",
      "default": "#d4d4d4"
    },
    {
      "type": "color",
      "id": "edge_color",
      "label": "Metal edge color",
      "default": "#b8b8b8"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Product information"
    },
    {
      "type": "color",
      "id": "info_bg_color",
      "label": "Info background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "info_text_color",
      "label": "Info text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "info_title_color",
      "label": "Product title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "info_price_color",
      "label": "Price color",
      "default": "#007acc"
    },
    {
      "type": "header",
      "content": "3D controls"
    },
    {
      "type": "color",
      "id": "control_bg_color",
      "label": "Control background",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "control_text_color",
      "label": "Control text",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "3D product viewer"
    }
  ]
}
{% endschema %}