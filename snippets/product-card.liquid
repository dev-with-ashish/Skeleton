<div class="p-8 shadow-2xl transition-all duration-300 hover:transform hover:-translate-y-2" style="border: 1px solid #4a4a6a; background: linear-gradient(135deg, #1a1a3a 0%, #2a2a4a 100%); border-radius: 12px;" data-product-id="{{ product.id }}">
  
  <!-- Product Image -->
  <div class="relative mb-8">
    <a href="{{ product.url }}">
      {% if product.featured_image %}
        <img src="https://hatchcanvas.com/_/assets/ab_jSsrUAYC8lj-bzTZDqsvu/keys//{{ product.featured_image | img_url: '400x400' }}" alt="{{ product.title }}" class="w-full h-80 object-contain rounded-xl" style="background: linear-gradient(135deg, #2a2a4a 0%, #3a3a5a 100%);">
      {% else %}
        <div class="w-full h-80 rounded-xl flex items-center justify-center" style="background: linear-gradient(135deg, #2a2a4a 0%, #3a3a5a 100%);">
          <svg class="w-20 h-20 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"/>
          </svg>
        </div>
      {% endif %}
    </a>
    
    <!-- Sale Badge -->
    {% if product.compare_at_price > product.price %}
      <span class="absolute top-4 right-4 text-white px-4 py-2 text-sm font-black" style="font-family: 'Oswald', sans-serif; color: #22c55e; background: linear-gradient(135deg, #166534, #22c55e); border-radius: 6px;">
        SALE
      </span>
    {% endif %}
    
    <!-- Tier Badge (you can customize based on collection or product tags) -->
    {% if product.tags contains 'budget' %}
      <span class="absolute top-4 left-4 text-white px-3 py-1 text-xs font-black" style="font-family: 'Oswald', sans-serif; background: linear-gradient(135deg, #166534, #22c55e); border-radius: 6px;">
        BUDGET
      </span>
    {% elsif product.tags contains 'premium' %}
      <span class="absolute top-4 left-4 text-white px-3 py-1 text-xs font-black" style="font-family: 'Oswald', sans-serif; background: linear-gradient(135deg, #a16207, #eab308); border-radius: 6px;">
        PREMIUM
      </span>
    {% elsif product.tags contains 'mid-tier' %}
      <span class="absolute top-4 left-4 text-white px-3 py-1 text-xs font-black" style="font-family: 'Oswald', sans-serif; background: linear-gradient(135deg, #c2410c, #f97316); border-radius: 6px;">
        MID-TIER
      </span>
    {% endif %}
  </div>
  
  <!-- Product Title -->
  <h5 class="font-black text-white mb-3 text-xl" style="font-family: 'Oswald', sans-serif; text-transform: uppercase; letter-spacing: 0.05em;">
    <a href="{{ product.url }}">{{ product.title }}</a>
  </h5>
  
  <!-- Product Description -->
  <p class="text-purple-300 mb-6 text-base font-semibold">
    {{ product.description | strip_html | truncate: 60 }}
  </p>
  
  <!-- Price and Quantity Controls -->
  <div class="flex items-center justify-between mb-8">
    <!-- Price -->
    <span class="font-black" style="background: linear-gradient(45deg, #e0e0ff, #c0c0e0); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; font-weight: 900; font-size: 2rem;">
      {% if product.compare_at_price > product.price %}
        <span class="line-through text-gray-400 text-lg mr-2">{{ product.compare_at_price | money }}</span>
      {% endif %}
      {{ product.price | money }}
    </span>
    
    <!-- Quantity Controls -->
    <div class="flex items-center space-x-3">
      <button class="w-12 h-12 border-2 border-purple-600 rounded-md flex items-center justify-center bg-transparent text-white font-black transition-colors hover:bg-purple-600 decrease-qty" type="button">
        -
      </button>
      <span class="w-16 text-center font-black text-lg text-white qty-display">1</span>
      <button class="w-12 h-12 border-2 border-purple-600 rounded-md flex items-center justify-center bg-transparent text-white font-black transition-colors hover:bg-purple-600 increase-qty" type="button">
        +
      </button>
    </div>
  </div>
  
  <!-- Add to Cart Form -->
  <form action="{{ routes.cart_add_url }}" method="post" enctype="multipart/form-data" class="add-to-cart-form">
    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
    <input type="hidden" name="quantity" value="1" class="qty-input">
    
    {% if product.available %}
      <button type="submit" class="w-full bg-white text-black py-4 font-black text-lg hover:bg-gray-200 transition-colors mb-4 add-to-cart-btn" style="font-family: 'Oswald', sans-serif; text-transform: uppercase; letter-spacing: 0.05em; border-radius: 8px;">
        ADD TO CART
      </button>
    {% else %}
      <button type="button" disabled class="w-full bg-gray-600 text-white py-4 font-black text-lg cursor-not-allowed" style="font-family: 'Oswald', sans-serif; text-transform: uppercase; letter-spacing: 0.05em; border-radius: 8px;">
        SOLD OUT
      </button>
    {% endif %}
  </form>
  
  <!-- View Product Link -->
  <a href="{{ product.url }}" class="block text-center text-purple-300 hover:text-white transition-colors font-semibold" style="font-family: 'Oswald', sans-serif; text-transform: uppercase; letter-spacing: 0.05em;">
    VIEW DETAILS
  </a>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Get all product cards
  const productCards = document.querySelectorAll('[data-product-id]');
  
  productCards.forEach(card => {
    const decreaseBtn = card.querySelector('.decrease-qty');
    const increaseBtn = card.querySelector('.increase-qty');
    const qtyDisplay = card.querySelector('.qty-display');
    const qtyInput = card.querySelector('.qty-input');
    const form = card.querySelector('.add-to-cart-form');
    
    // Quantity controls
    decreaseBtn.addEventListener('click', function() {
      let qty = parseInt(qtyDisplay.textContent);
      if (qty > 1) {
        qty--;
        qtyDisplay.textContent = qty;
        qtyInput.value = qty;
        qtyDisplay.style.transform = 'scale(0.9)';
        setTimeout(() => qtyDisplay.style.transform = 'scale(1)', 150);
      }
    });
    
    increaseBtn.addEventListener('click', function() {
      let qty = parseInt(qtyDisplay.textContent);
      qty++;
      qtyDisplay.textContent = qty;
      qtyInput.value = qty;
      qtyDisplay.style.transform = 'scale(1.1)';
      setTimeout(() => qtyDisplay.style.transform = 'scale(1)', 150);
    });
    
    // Add to cart form submission
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const button = this.querySelector('.add-to-cart-btn');
      const originalText = button.textContent;
      
      // Update button state
      button.textContent = 'ADDING...';
      button.disabled = true;
      
      // Add to cart using Shopify AJAX
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        // Update cart count
        fetch('/cart.js')
          .then(response => response.json())
          .then(cart => {
            const cartBadge = document.querySelector('header span');
            if (cartBadge) {
              cartBadge.textContent = cart.item_count;
              cartBadge.style.transform = 'scale(1.3)';
              cartBadge.style.background = '#22c55e';
              setTimeout(() => {
                cartBadge.style.transform = 'scale(1)';
                cartBadge.style.background = 'white';
              }, 300);
            }
          });
        
        // Success state
        button.textContent = 'ADDED!';
        button.style.background = '#22c55e';
        button.style.color = 'white';
        
        // Reset after 2 seconds
        setTimeout(() => {
          button.textContent = originalText;
          button.style.background = 'white';
          button.style.color = 'black';
          button.disabled = false;
        }, 2000);
      })
      .catch(error => {
        console.error('Error:', error);
        button.textContent = 'ERROR';
        button.style.background = '#ef4444';
        
        setTimeout(() => {
          button.textContent = originalText;
          button.style.background = 'white';
          button.style.color = 'black';
          button.disabled = false;
        }, 2000);
      });
    });
  });
});
</script>
